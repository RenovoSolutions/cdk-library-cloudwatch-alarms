// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EcsServiceSnapshot 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ClusterEB0386A7": Object {
      "Properties": Object {
        "ClusterName": "TestCluster",
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "ServiceD69D759B": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "Alarms": Object {
            "AlarmNames": Array [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "ServiceSecurityGroupC96ED6A7",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "TaskDef54694570",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ServiceEcsServiceRecommendedAlarmsFromAspectServiceCpuUtilization2BC2992E": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high CPU utilization for the ECS service. Consistent high CPU utilization can indicate a resource bottleneck or application performance problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ECS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceEcsServiceRecommendedAlarmsFromAspectServiceEphemeralStorageUtilizedBA89A12E": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high ephemeral storage usage for the Fargate cluster. Consistent high ephemeral storage utilized can indicate that the disk is full and it might lead  to failure of the container.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - EphemeralStorageUtilized",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "EphemeralStorageUtilized",
        "Namespace": "ECS/ContainerInsights",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceEcsServiceRecommendedAlarmsFromAspectServiceMemoryUtilizationC5E8B967": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high memory utilization for the ECS service. Consistent high memory utilization can indicate a resource bottleneck or application performance problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - MemoryUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "MemoryUtilization",
        "Namespace": "AWS/ECS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceEcsServiceRecommendedAlarmsFromAspectServiceRunningTaskCount97F96CFB": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect whether the number of running tasks are too low. A consistent low running task count can indicate ECS service deployment or performance issues.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - RunningTaskCount",
            ],
          ],
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "RunningTaskCount",
        "Namespace": "ECS/ContainerInsights",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceSecurityGroupC96ED6A7": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "GroupDescription": "TestStack/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ServiceTaskCountTarget23E25614": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "MaxCapacity": 10,
        "MinCapacity": 1,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::123456789012:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "TaskDef54694570": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 256,
            "Essential": true,
            "Image": "amazon/amazon-ecs-sample",
            "Memory": 512,
            "Name": "Container",
          },
        ],
        "Cpu": "256",
        "Family": "TestStackTaskDefA6238255",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefTaskRole1EDB4A67",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefTaskRole1EDB4A67": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`EcsServiceSnapshotDefaultActionsInUse 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ClusterEB0386A7": Object {
      "Properties": Object {
        "ClusterName": "TestCluster",
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "ServiceD69D759B": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "Alarms": Object {
            "AlarmNames": Array [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "ServiceSecurityGroupC96ED6A7",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "TaskDef54694570",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ServiceSecurityGroupC96ED6A7": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "GroupDescription": "TestStack/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ServiceTaskCountTarget23E25614": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "MaxCapacity": 10,
        "MinCapacity": 1,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::123456789012:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "TaskDef54694570": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 256,
            "Essential": true,
            "Image": "amazon/amazon-ecs-sample",
            "Memory": 512,
            "Name": "Container",
          },
        ],
        "Cpu": "256",
        "Family": "TestStackTaskDefA6238255",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefTaskRole1EDB4A67",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefTaskRole1EDB4A67": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TopicBFC7AF6E": Object {
      "Type": "AWS::SNS::Topic",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "ecsServiceAlarmsServiceCpuUtilization3A3354F9": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to detect high CPU utilization for the ECS service. Consistent high CPU utilization can indicate a resource bottleneck or application performance problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ECS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ecsServiceAlarmsServiceEphemeralStorageUtilizedAD3FAB25": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to detect high ephemeral storage usage for the Fargate cluster. Consistent high ephemeral storage utilized can indicate that the disk is full and it might lead  to failure of the container.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - EphemeralStorageUtilized",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "EphemeralStorageUtilized",
        "Namespace": "ECS/ContainerInsights",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ecsServiceAlarmsServiceMemoryUtilization226342D8": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to detect high memory utilization for the ECS service. Consistent high memory utilization can indicate a resource bottleneck or application performance problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - MemoryUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "MemoryUtilization",
        "Namespace": "AWS/ECS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ecsServiceAlarmsServiceRunningTaskCount8874E89D": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to detect whether the number of running tasks are too low. A consistent low running task count can indicate ECS service deployment or performance issues.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - RunningTaskCount",
            ],
          ],
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "RunningTaskCount",
        "Namespace": "ECS/ContainerInsights",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`EcsServiceSnapshotWithExclusion 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ClusterEB0386A7": Object {
      "Properties": Object {
        "ClusterName": "TestCluster",
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "ServiceD69D759B": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "Alarms": Object {
            "AlarmNames": Array [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "ServiceSecurityGroupC96ED6A7",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "TaskDef54694570",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ServiceEcsServiceRecommendedAlarmsFromAspectServiceEphemeralStorageUtilizedBA89A12E": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high ephemeral storage usage for the Fargate cluster. Consistent high ephemeral storage utilized can indicate that the disk is full and it might lead  to failure of the container.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - EphemeralStorageUtilized",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "EphemeralStorageUtilized",
        "Namespace": "ECS/ContainerInsights",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceEcsServiceRecommendedAlarmsFromAspectServiceMemoryUtilizationC5E8B967": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high memory utilization for the ECS service. Consistent high memory utilization can indicate a resource bottleneck or application performance problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - MemoryUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "MemoryUtilization",
        "Namespace": "AWS/ECS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceEcsServiceRecommendedAlarmsFromAspectServiceRunningTaskCount97F96CFB": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect whether the number of running tasks are too low. A consistent low running task count can indicate ECS service deployment or performance issues.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - RunningTaskCount",
            ],
          ],
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "RunningTaskCount",
        "Namespace": "ECS/ContainerInsights",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceSecurityGroupC96ED6A7": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "GroupDescription": "TestStack/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ServiceTaskCountTarget23E25614": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "MaxCapacity": 10,
        "MinCapacity": 1,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::123456789012:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "TaskDef54694570": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 256,
            "Essential": true,
            "Image": "amazon/amazon-ecs-sample",
            "Memory": 512,
            "Name": "Container",
          },
        ],
        "Cpu": "256",
        "Family": "TestStackTaskDefA6238255",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefTaskRole1EDB4A67",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefTaskRole1EDB4A67": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`SnapshotForEcsServiceConstruct 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ClusterEB0386A7": Object {
      "Properties": Object {
        "ClusterName": "TestCluster",
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "ServiceD69D759B": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "Alarms": Object {
            "AlarmNames": Array [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "ServiceSecurityGroupC96ED6A7",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "TaskDef54694570",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ServiceEcsServiceRecommendedAlarmsServiceCpuUtilizationDAF02661": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high CPU utilization for the ECS service. Consistent high CPU utilization can indicate a resource bottleneck or application performance problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ECS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceEcsServiceRecommendedAlarmsServiceEphemeralStorageUtilizedA0ECC9C2": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high ephemeral storage usage for the Fargate cluster. Consistent high ephemeral storage utilized can indicate that the disk is full and it might lead  to failure of the container.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - EphemeralStorageUtilized",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "EphemeralStorageUtilized",
        "Namespace": "ECS/ContainerInsights",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceEcsServiceRecommendedAlarmsServiceMemoryUtilizationC1D94DB2": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high memory utilization for the ECS service. Consistent high memory utilization can indicate a resource bottleneck or application performance problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - MemoryUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "MemoryUtilization",
        "Namespace": "AWS/ECS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceEcsServiceRecommendedAlarmsServiceRunningTaskCount172FD909": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect whether the number of running tasks are too low. A consistent low running task count can indicate ECS service deployment or performance issues.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - RunningTaskCount",
            ],
          ],
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "RunningTaskCount",
        "Namespace": "ECS/ContainerInsights",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceSecurityGroupC96ED6A7": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "GroupDescription": "TestStack/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ServiceTaskCountTarget23E25614": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "MaxCapacity": 10,
        "MinCapacity": 1,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::123456789012:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "TaskDef54694570": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 256,
            "Essential": true,
            "Image": "amazon/amazon-ecs-sample",
            "Memory": 512,
            "Name": "Container",
          },
        ],
        "Cpu": "256",
        "Family": "TestStackTaskDefA6238255",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefTaskRole1EDB4A67",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefTaskRole1EDB4A67": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`alarms can be applied individually to services using extended construct 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ClusterEB0386A7": Object {
      "Properties": Object {
        "ClusterName": "TestCluster",
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "ServiceCpuUtilizationAlarmA918C853": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high CPU utilization for the ECS service. Consistent high CPU utilization can indicate a resource bottleneck or application performance problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ECS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceD69D759B": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "Alarms": Object {
            "AlarmNames": Array [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "ServiceSecurityGroupC96ED6A7",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "TaskDef54694570",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ServiceEphemeralStorageUtilizedAlarm43DA915F": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high ephemeral storage usage for the Fargate cluster. Consistent high ephemeral storage utilized can indicate that the disk is full and it might lead  to failure of the container.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - EphemeralStorageUtilized",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "EphemeralStorageUtilized",
        "Namespace": "ECS/ContainerInsights",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceMemoryUtilizationAlarmA4074DDB": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high memory utilization for the ECS service. Consistent high memory utilization can indicate a resource bottleneck or application performance problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - MemoryUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "MemoryUtilization",
        "Namespace": "AWS/ECS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceRunningTaskCountAlarm5DEE6328": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect whether the number of running tasks are too low. A consistent low running task count can indicate ECS service deployment or performance issues.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - RunningTaskCount",
            ],
          ],
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "RunningTaskCount",
        "Namespace": "ECS/ContainerInsights",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceSecurityGroupC96ED6A7": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "GroupDescription": "TestStack/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ServiceTaskCountTarget23E25614": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "MaxCapacity": 10,
        "MinCapacity": 1,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::123456789012:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "TaskDef54694570": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 256,
            "Essential": true,
            "Image": "amazon/amazon-ecs-sample",
            "Memory": 512,
            "Name": "Container",
          },
        ],
        "Cpu": "256",
        "Family": "TestStackTaskDefA6238255",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefTaskRole1EDB4A67",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefTaskRole1EDB4A67": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`default alarm actions are overridden when individual alarm actions are provided in configuration 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ClusterEB0386A7": Object {
      "Properties": Object {
        "ClusterName": "TestCluster",
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "LambdaD247545B": Object {
      "DependsOn": Array [
        "LambdaServiceRoleA8ED4D3B",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "exports.handler = async (event) => { console.log(event); }",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LambdaServiceRoleA8ED4D3B",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaServiceCpuUtilizationAlarmPermissionE8191EF4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": "123456789012",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "ecsServiceAlarmsServiceCpuUtilization3A3354F9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaServiceEphemeralStorageUtilizedAlarmPermissionDE174648": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": "123456789012",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "ecsServiceAlarmsServiceEphemeralStorageUtilizedAD3FAB25",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaServiceMemoryUtilizationAlarmPermissionEBFF25D3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": "123456789012",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "ecsServiceAlarmsServiceMemoryUtilization226342D8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaServiceRoleA8ED4D3B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaServiceRunningTaskCountAlarmPermissionE7F936AC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": "123456789012",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "ecsServiceAlarmsServiceRunningTaskCount8874E89D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ServiceD69D759B": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "Alarms": Object {
            "AlarmNames": Array [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "ServiceSecurityGroupC96ED6A7",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "TaskDef54694570",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ServiceSecurityGroupC96ED6A7": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "GroupDescription": "TestStack/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ServiceTaskCountTarget23E25614": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "MaxCapacity": 10,
        "MinCapacity": 1,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::123456789012:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "TaskDef54694570": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 256,
            "Essential": true,
            "Image": "amazon/amazon-ecs-sample",
            "Memory": 512,
            "Name": "Container",
          },
        ],
        "Cpu": "256",
        "Family": "TestStackTaskDefA6238255",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefTaskRole1EDB4A67",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefTaskRole1EDB4A67": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TopicBFC7AF6E": Object {
      "Type": "AWS::SNS::Topic",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "ecsServiceAlarmsServiceCpuUtilization3A3354F9": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "AlarmDescription": "This alarm is used to detect high CPU utilization for the ECS service. Consistent high CPU utilization can indicate a resource bottleneck or application performance problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ECS",
        "OKActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ecsServiceAlarmsServiceEphemeralStorageUtilizedAD3FAB25": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "AlarmDescription": "This alarm is used to detect high ephemeral storage usage for the Fargate cluster. Consistent high ephemeral storage utilized can indicate that the disk is full and it might lead  to failure of the container.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - EphemeralStorageUtilized",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "MetricName": "EphemeralStorageUtilized",
        "Namespace": "ECS/ContainerInsights",
        "OKActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ecsServiceAlarmsServiceMemoryUtilization226342D8": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "AlarmDescription": "This alarm is used to detect high memory utilization for the ECS service. Consistent high memory utilization can indicate a resource bottleneck or application performance problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - MemoryUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "MetricName": "MemoryUtilization",
        "Namespace": "AWS/ECS",
        "OKActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ecsServiceAlarmsServiceRunningTaskCount8874E89D": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "AlarmDescription": "This alarm is used to detect whether the number of running tasks are too low. A consistent low running task count can indicate ECS service deployment or performance issues.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - RunningTaskCount",
            ],
          ],
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "MetricName": "RunningTaskCount",
        "Namespace": "ECS/ContainerInsights",
        "OKActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`optional alarm configurations can be overwritten 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ClusterEB0386A7": Object {
      "Properties": Object {
        "ClusterName": "TestCluster",
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "Service1EcsServiceRecommendedAlarmsFromAspectService1CpuUtilization670F257D": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomCpuUtilizationAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "Service1Service6EBC868E",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ECS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Service1EcsServiceRecommendedAlarmsFromAspectService1EphemeralStorageUtilizedBADF9497": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomEphemeralStorageUtilizedAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "Service1Service6EBC868E",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "EphemeralStorageUtilized",
        "Namespace": "ECS/ContainerInsights",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Service1EcsServiceRecommendedAlarmsFromAspectService1MemoryUtilizationA61D7CA0": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomMemoryUtilizationAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "Service1Service6EBC868E",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "MemoryUtilization",
        "Namespace": "AWS/ECS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Service1EcsServiceRecommendedAlarmsFromAspectService1RunningTaskCountCD775590": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomRunningTaskCountAlarm",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "Service1Service6EBC868E",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "RunningTaskCount",
        "Namespace": "ECS/ContainerInsights",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Service1SecurityGroup6439F779": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "GroupDescription": "TestStack/Service1/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Service1Service6EBC868E": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "Alarms": Object {
            "AlarmNames": Array [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "Service1SecurityGroup6439F779",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "TaskDef54694570",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "Service1TaskCountTarget48418001": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "MaxCapacity": 10,
        "MinCapacity": 1,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "Service1Service6EBC868E",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::123456789012:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "TaskDef54694570": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 256,
            "Essential": true,
            "Image": "amazon/amazon-ecs-sample",
            "Memory": 512,
            "Name": "Container",
          },
        ],
        "Cpu": "256",
        "Family": "TestStackTaskDefA6238255",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefTaskRole1EDB4A67",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefTaskRole1EDB4A67": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TopicBFC7AF6E": Object {
      "Type": "AWS::SNS::Topic",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`stack should contain service recommended alarms if recommended alarms aspect is applied with no exclusions 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ClusterEB0386A7": Object {
      "Properties": Object {
        "ClusterName": "TestCluster",
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "ServiceD69D759B": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "Alarms": Object {
            "AlarmNames": Array [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "ServiceSecurityGroupC96ED6A7",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "TaskDef54694570",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ServiceEcsServiceRecommendedAlarmsFromAspectServiceCpuUtilization2BC2992E": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high CPU utilization for the ECS service. Consistent high CPU utilization can indicate a resource bottleneck or application performance problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ECS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceEcsServiceRecommendedAlarmsFromAspectServiceEphemeralStorageUtilizedBA89A12E": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high ephemeral storage usage for the Fargate cluster. Consistent high ephemeral storage utilized can indicate that the disk is full and it might lead  to failure of the container.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - EphemeralStorageUtilized",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "EphemeralStorageUtilized",
        "Namespace": "ECS/ContainerInsights",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceEcsServiceRecommendedAlarmsFromAspectServiceMemoryUtilizationC5E8B967": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high memory utilization for the ECS service. Consistent high memory utilization can indicate a resource bottleneck or application performance problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - MemoryUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "MemoryUtilization",
        "Namespace": "AWS/ECS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceEcsServiceRecommendedAlarmsFromAspectServiceRunningTaskCount97F96CFB": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect whether the number of running tasks are too low. A consistent low running task count can indicate ECS service deployment or performance issues.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
              " - RunningTaskCount",
            ],
          ],
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ServiceD69D759B",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "RunningTaskCount",
        "Namespace": "ECS/ContainerInsights",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ServiceSecurityGroupC96ED6A7": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "GroupDescription": "TestStack/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ServiceTaskCountTarget23E25614": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "MaxCapacity": 10,
        "MinCapacity": 1,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "ServiceD69D759B",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::123456789012:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "TaskDef54694570": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 256,
            "Essential": true,
            "Image": "amazon/amazon-ecs-sample",
            "Memory": 512,
            "Name": "Container",
          },
        ],
        "Cpu": "256",
        "Family": "TestStackTaskDefA6238255",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefTaskRole1EDB4A67",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefTaskRole1EDB4A67": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`when an resource is excluded from the aspect config it should not have alarms 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ClusterEB0386A7": Object {
      "Properties": Object {
        "ClusterName": "TestCluster",
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "Service1SecurityGroup6439F779": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "GroupDescription": "TestStack/Service1/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Service1Service6EBC868E": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "Alarms": Object {
            "AlarmNames": Array [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "Service1SecurityGroup6439F779",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "TaskDef54694570",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "Service1TaskCountTarget48418001": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "MaxCapacity": 10,
        "MinCapacity": 1,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "Service1Service6EBC868E",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::123456789012:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "Service2EcsServiceRecommendedAlarmsFromAspectService2CpuUtilization22D8B29C": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high CPU utilization for the ECS service. Consistent high CPU utilization can indicate a resource bottleneck or application performance problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "Service2ServiceEE0EB41F",
                  "Name",
                ],
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "Service2ServiceEE0EB41F",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ECS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Service2EcsServiceRecommendedAlarmsFromAspectService2EphemeralStorageUtilized2FF80D22": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high ephemeral storage usage for the Fargate cluster. Consistent high ephemeral storage utilized can indicate that the disk is full and it might lead  to failure of the container.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "Service2ServiceEE0EB41F",
                  "Name",
                ],
              },
              " - EphemeralStorageUtilized",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "Service2ServiceEE0EB41F",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "EphemeralStorageUtilized",
        "Namespace": "ECS/ContainerInsights",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Service2EcsServiceRecommendedAlarmsFromAspectService2MemoryUtilizationAB6EDC31": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect high memory utilization for the ECS service. Consistent high memory utilization can indicate a resource bottleneck or application performance problems.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "Service2ServiceEE0EB41F",
                  "Name",
                ],
              },
              " - MemoryUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "Service2ServiceEE0EB41F",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "MemoryUtilization",
        "Namespace": "AWS/ECS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Service2EcsServiceRecommendedAlarmsFromAspectService2RunningTaskCountEAFCD850": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect whether the number of running tasks are too low. A consistent low running task count can indicate ECS service deployment or performance issues.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "-",
              Object {
                "Fn::GetAtt": Array [
                  "Service2ServiceEE0EB41F",
                  "Name",
                ],
              },
              " - RunningTaskCount",
            ],
          ],
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "Service2ServiceEE0EB41F",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "RunningTaskCount",
        "Namespace": "ECS/ContainerInsights",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Service2SecurityGroup0BEEFA6E": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "GroupDescription": "TestStack/Service2/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Service2ServiceEE0EB41F": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "Alarms": Object {
            "AlarmNames": Array [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "Service2SecurityGroup0BEEFA6E",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
              Object {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "TaskDef54694570",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "Service2TaskCountTarget9745568E": Object {
      "DependsOn": Array [
        "TaskDefTaskRole1EDB4A67",
      ],
      "Properties": Object {
        "MaxCapacity": 10,
        "MinCapacity": 1,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "Service2ServiceEE0EB41F",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::123456789012:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "TaskDef54694570": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 256,
            "Essential": true,
            "Image": "amazon/amazon-ecs-sample",
            "Memory": 512,
            "Name": "Container",
          },
        ],
        "Cpu": "256",
        "Family": "TestStackTaskDefA6238255",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefTaskRole1EDB4A67",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefTaskRole1EDB4A67": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
