// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DatabaseClusterSnapshot 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AuroraMySQLCluster07727989": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "test",
        "DBClusterParameterGroupName": "default.aurora-mysql8.0",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMySQLClusterSubnetsD978BAC7",
        },
        "DatabaseName": "test",
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.07.0",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectAuroraBinLogReplicationLagAlarm29F0F945": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect whether the writer instance is in an error state and can't replicate the source. This alarm is recommended only for Aurora MySQL.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster07727989",
              },
              " - AuroraBinLogReplicaLag",
            ],
          ],
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster07727989",
            },
          },
          Object {
            "Name": "Role",
            "Value": "WRITER",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "AuroraBinLogReplicaLag",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": -1,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectAuroraVolumeBytesLeftTotalAlarm187FB1CE": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora cluster is to the volume size limit. This alarm can prevent an out-of-space error that occurs when your cluster runs out of space. This alarm is recommended only for Aurora MySQL.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster07727989",
              },
              " - AuroraVolumeBytesLeftTotal",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster07727989",
            },
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "AuroraVolumeBytesLeftTotal",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceCpuUtilizationAlarm4308392C": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceDatabaseConnectionsAlarm7AD85065": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceDbLoadAlarmEBA41FA0": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeLocalStorageAlarm0DD430AF": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeStorageSpaceAlarm62694DD9": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeableMemoryAlarmBE2633BC": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceReadLatencyAlarmDDE9F446": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceWriteLatencyAlarmC076CA18": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceCpuUtilizationAlarm3A90CA8F": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceDatabaseConnectionsAlarmE63442F4": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceDbLoadAlarm990FC5EC": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeLocalStorageAlarm419ACAA5": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeStorageSpaceAlarmCAB33960": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeableMemoryAlarm0E4C2765": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceReadLatencyAlarmD65F23E5": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceWriteLatencyAlarm52B496B6": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterSecretAttachment8439569D": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraMySQLClusterSubnetsD978BAC7": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for AuroraMySQLCluster database",
        "SubnetIds": Array [
          Object {
            "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
          },
          Object {
            "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
          },
          Object {
            "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AuroraMySQLClusterreaderinstance01C5FF86": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AuroraMySQLClusterwriterinstance657481ED",
        "testrdsprivateSubnet1RouteTableAssociationAC8CE190",
        "testrdsprivateSubnet2RouteTableAssociation6EB95C83",
        "testrdsprivateSubnet3RouteTableAssociation5ABD087D",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "reader-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 2,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMySQLClusterwriterinstance657481ED": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "testrdsprivateSubnet1RouteTableAssociationAC8CE190",
        "testrdsprivateSubnet2RouteTableAssociation6EB95C83",
        "testrdsprivateSubnet3RouteTableAssociation5ABD087D",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "writer-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testrdsFE79C7B1": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testrdsIGW90BA6F57": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testrdsVPCGW38EEFC29": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testrdsprivateSubnet1RouteTableAssociationAC8CE190": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet1RouteTableF5594CEE",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet1RouteTableF5594CEE": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet1Subnet49BD9E1E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet2RouteTableAssociation6EB95C83": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet2RouteTableC70C9425",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet2RouteTableC70C9425": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet2SubnetB79E90BA": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet3RouteTable603BFA5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet3RouteTableAssociation5ABD087D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet3RouteTable603BFA5E",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet3Subnet40FC1E62": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet1DefaultRoute364C8299": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet1RouteTable8DBFF328": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet1RouteTableAssociation59AC0B52": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet1Subnet8979A0B2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet1Subnet8979A0B2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet2DefaultRoute73946553": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet2RouteTable321F0C5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet2RouteTableAssociation15ADEE79": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet2Subnet911A79F8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet2Subnet911A79F8": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet3DefaultRoute35E316A7": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet3RouteTable47DA3E22": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet3RouteTableAssociation5D498271": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet3SubnetC9F68609",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet3SubnetC9F68609": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`DatabaseClusterSnapshotDefaultActionsInUse 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AuroraMySQLCluster07727989": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "test",
        "DBClusterParameterGroupName": "default.aurora-mysql8.0",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMySQLClusterSubnetsD978BAC7",
        },
        "DatabaseName": "test",
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.07.0",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "AuroraMySQLClusterSecretAttachment8439569D": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraMySQLClusterSubnetsD978BAC7": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for AuroraMySQLCluster database",
        "SubnetIds": Array [
          Object {
            "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
          },
          Object {
            "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
          },
          Object {
            "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AuroraMySQLClusterreaderinstance01C5FF86": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AuroraMySQLClusterwriterinstance657481ED",
        "testrdsprivateSubnet1RouteTableAssociationAC8CE190",
        "testrdsprivateSubnet2RouteTableAssociation6EB95C83",
        "testrdsprivateSubnet3RouteTableAssociation5ABD087D",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "reader-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 2,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMySQLClusterwriterinstance657481ED": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "testrdsprivateSubnet1RouteTableAssociationAC8CE190",
        "testrdsprivateSubnet2RouteTableAssociation6EB95C83",
        "testrdsprivateSubnet3RouteTableAssociation5ABD087D",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "writer-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TopicBFC7AF6E": Object {
      "Type": "AWS::SNS::Topic",
    },
    "rdsClusterAlarmsAuroraBinLogReplicationLagAlarmC65364DF": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to detect whether the writer instance is in an error state and can't replicate the source. This alarm is recommended only for Aurora MySQL.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster07727989",
              },
              " - AuroraBinLogReplicaLag",
            ],
          ],
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster07727989",
            },
          },
          Object {
            "Name": "Role",
            "Value": "WRITER",
          },
        ],
        "EvaluationPeriods": 2,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "AuroraBinLogReplicaLag",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsAuroraVolumeBytesLeftTotalAlarm0D93D140": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to detect how close the Aurora cluster is to the volume size limit. This alarm can prevent an out-of-space error that occurs when your cluster runs out of space. This alarm is recommended only for Aurora MySQL.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster07727989",
              },
              " - AuroraVolumeBytesLeftTotal",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster07727989",
            },
          },
        ],
        "EvaluationPeriods": 2,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "AuroraVolumeBytesLeftTotal",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceCpuUtilizationAlarm4493110D": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceDatabaseConnectionsAlarmD0F39709": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceDbLoadAlarm876E4346": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeLocalStorageAlarm4A1DD44E": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeStorageSpaceAlarmD1CFD194": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeableMemoryAlarmB2956205": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceReadLatencyAlarm4F3D40A3": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceWriteLatencyAlarmAA5A3D09": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceCpuUtilizationAlarmB55DAA01": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceDatabaseConnectionsAlarm0D69A917": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceDbLoadAlarm26CD4075": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeLocalStorageAlarmC252B623": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeStorageSpaceAlarm3A826835": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeableMemoryAlarmAD1FBE40": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceReadLatencyAlarmD98F3F55": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceWriteLatencyAlarm807A7000": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testrdsFE79C7B1": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testrdsIGW90BA6F57": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testrdsVPCGW38EEFC29": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testrdsprivateSubnet1RouteTableAssociationAC8CE190": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet1RouteTableF5594CEE",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet1RouteTableF5594CEE": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet1Subnet49BD9E1E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet2RouteTableAssociation6EB95C83": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet2RouteTableC70C9425",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet2RouteTableC70C9425": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet2SubnetB79E90BA": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet3RouteTable603BFA5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet3RouteTableAssociation5ABD087D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet3RouteTable603BFA5E",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet3Subnet40FC1E62": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet1DefaultRoute364C8299": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet1RouteTable8DBFF328": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet1RouteTableAssociation59AC0B52": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet1Subnet8979A0B2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet1Subnet8979A0B2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet2DefaultRoute73946553": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet2RouteTable321F0C5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet2RouteTableAssociation15ADEE79": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet2Subnet911A79F8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet2Subnet911A79F8": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet3DefaultRoute35E316A7": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet3RouteTable47DA3E22": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet3RouteTableAssociation5D498271": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet3SubnetC9F68609",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet3SubnetC9F68609": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`DatabaseClusterSnapshotWithExclusion 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AuroraMySQLCluster07727989": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "test",
        "DBClusterParameterGroupName": "default.aurora-mysql8.0",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMySQLClusterSubnetsD978BAC7",
        },
        "DatabaseName": "test",
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.07.0",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectAuroraBinLogReplicationLagAlarm29F0F945": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect whether the writer instance is in an error state and can't replicate the source. This alarm is recommended only for Aurora MySQL.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster07727989",
              },
              " - AuroraBinLogReplicaLag",
            ],
          ],
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster07727989",
            },
          },
          Object {
            "Name": "Role",
            "Value": "WRITER",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "AuroraBinLogReplicaLag",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": -1,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectAuroraVolumeBytesLeftTotalAlarm187FB1CE": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora cluster is to the volume size limit. This alarm can prevent an out-of-space error that occurs when your cluster runs out of space. This alarm is recommended only for Aurora MySQL.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster07727989",
              },
              " - AuroraVolumeBytesLeftTotal",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster07727989",
            },
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "AuroraVolumeBytesLeftTotal",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceDatabaseConnectionsAlarm7AD85065": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceDbLoadAlarmEBA41FA0": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeLocalStorageAlarm0DD430AF": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeStorageSpaceAlarm62694DD9": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeableMemoryAlarmBE2633BC": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceReadLatencyAlarmDDE9F446": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceWriteLatencyAlarmC076CA18": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceDatabaseConnectionsAlarmE63442F4": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceDbLoadAlarm990FC5EC": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeLocalStorageAlarm419ACAA5": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeStorageSpaceAlarmCAB33960": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeableMemoryAlarm0E4C2765": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceReadLatencyAlarmD65F23E5": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceWriteLatencyAlarm52B496B6": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterSecretAttachment8439569D": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraMySQLClusterSubnetsD978BAC7": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for AuroraMySQLCluster database",
        "SubnetIds": Array [
          Object {
            "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
          },
          Object {
            "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
          },
          Object {
            "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AuroraMySQLClusterreaderinstance01C5FF86": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AuroraMySQLClusterwriterinstance657481ED",
        "testrdsprivateSubnet1RouteTableAssociationAC8CE190",
        "testrdsprivateSubnet2RouteTableAssociation6EB95C83",
        "testrdsprivateSubnet3RouteTableAssociation5ABD087D",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "reader-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 2,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMySQLClusterwriterinstance657481ED": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "testrdsprivateSubnet1RouteTableAssociationAC8CE190",
        "testrdsprivateSubnet2RouteTableAssociation6EB95C83",
        "testrdsprivateSubnet3RouteTableAssociation5ABD087D",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "writer-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testrdsFE79C7B1": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testrdsIGW90BA6F57": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testrdsVPCGW38EEFC29": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testrdsprivateSubnet1RouteTableAssociationAC8CE190": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet1RouteTableF5594CEE",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet1RouteTableF5594CEE": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet1Subnet49BD9E1E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet2RouteTableAssociation6EB95C83": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet2RouteTableC70C9425",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet2RouteTableC70C9425": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet2SubnetB79E90BA": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet3RouteTable603BFA5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet3RouteTableAssociation5ABD087D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet3RouteTable603BFA5E",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet3Subnet40FC1E62": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet1DefaultRoute364C8299": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet1RouteTable8DBFF328": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet1RouteTableAssociation59AC0B52": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet1Subnet8979A0B2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet1Subnet8979A0B2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet2DefaultRoute73946553": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet2RouteTable321F0C5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet2RouteTableAssociation15ADEE79": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet2Subnet911A79F8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet2Subnet911A79F8": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet3DefaultRoute35E316A7": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet3RouteTable47DA3E22": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet3RouteTableAssociation5D498271": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet3SubnetC9F68609",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet3SubnetC9F68609": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`DatabaseInstanceSnapshot 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "MySQLInstance216DD474": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "test",
        "DBName": "test",
        "DBSubnetGroupName": Object {
          "Ref": "MySQLInstanceSubnetGroupBBB46B1D",
        },
        "Engine": "mysql",
        "EngineVersion": "8.0.25",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceCpuUtilizationAlarm0EAE0B88": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceDatabaseConnectionsAlarmD77B1F7B": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceDbLoadAlarm992FC843": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceFreeLocalStorageAlarm8AF4EB33": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceFreeStorageSpaceAlarm50E6BC81": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceFreeableMemoryAlarm767C6F01": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceReadLatencyAlarm40D551B7": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceWriteLatencyAlarmBEB66DF5": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceSecretAttachmentAAD75603": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "MySQLInstance216DD474",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "MySQLInstanceSubnetGroupBBB46B1D": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for MySQLInstance database",
        "SubnetIds": Array [
          Object {
            "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
          },
          Object {
            "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
          },
          Object {
            "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testrdsFE79C7B1": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testrdsIGW90BA6F57": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testrdsVPCGW38EEFC29": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testrdsprivateSubnet1RouteTableAssociationAC8CE190": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet1RouteTableF5594CEE",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet1RouteTableF5594CEE": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet1Subnet49BD9E1E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet2RouteTableAssociation6EB95C83": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet2RouteTableC70C9425",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet2RouteTableC70C9425": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet2SubnetB79E90BA": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet3RouteTable603BFA5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet3RouteTableAssociation5ABD087D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet3RouteTable603BFA5E",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet3Subnet40FC1E62": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet1DefaultRoute364C8299": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet1RouteTable8DBFF328": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet1RouteTableAssociation59AC0B52": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet1Subnet8979A0B2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet1Subnet8979A0B2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet2DefaultRoute73946553": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet2RouteTable321F0C5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet2RouteTableAssociation15ADEE79": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet2Subnet911A79F8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet2Subnet911A79F8": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet3DefaultRoute35E316A7": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet3RouteTable47DA3E22": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet3RouteTableAssociation5D498271": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet3SubnetC9F68609",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet3SubnetC9F68609": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`DatabaseInstanceSnapshotDefaultActionsInUse 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "MySQLInstance1C9205ABC": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "test1",
        "DBName": "test",
        "DBSubnetGroupName": Object {
          "Ref": "MySQLInstance1SubnetGroup4AF0F1E3",
        },
        "Engine": "mysql",
        "EngineVersion": "8.0.25",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackMySQLInstance1SecretD8D5FB793fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "MySQLInstance1SecretAttachment011303F0": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackMySQLInstance1SecretD8D5FB793fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "MySQLInstance1C9205ABC",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "MySQLInstance1SubnetGroup4AF0F1E3": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for MySQLInstance1 database",
        "SubnetIds": Array [
          Object {
            "Ref": "testvpcprivateSubnet1Subnet2E35BD58",
          },
          Object {
            "Ref": "testvpcprivateSubnet2Subnet60F9C8A0",
          },
          Object {
            "Ref": "testvpcprivateSubnet3SubnetF4D12CC5",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "MySQLInstance2EF90FDEA": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "test2",
        "DBName": "test",
        "DBSubnetGroupName": Object {
          "Ref": "MySQLInstance2SubnetGroup5413C0C7",
        },
        "Engine": "mysql",
        "EngineVersion": "8.0.25",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackMySQLInstance2SecretD252E73F3fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "MySQLInstance2SecretAttachment8F17EA7D": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackMySQLInstance2SecretD252E73F3fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "MySQLInstance2EF90FDEA",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "MySQLInstance2SubnetGroup5413C0C7": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for MySQLInstance2 database",
        "SubnetIds": Array [
          Object {
            "Ref": "testvpcprivateSubnet1Subnet2E35BD58",
          },
          Object {
            "Ref": "testvpcprivateSubnet2Subnet60F9C8A0",
          },
          Object {
            "Ref": "testvpcprivateSubnet3SubnetF4D12CC5",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "TestStackMySQLInstance1SecretD8D5FB793fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TestStackMySQLInstance2SecretD252E73F3fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TopicBFC7AF6E": Object {
      "Type": "AWS::SNS::Topic",
    },
    "rdsDatabaseInstanceAlarms1InstanceCpuUtilizationAlarm1E62136C": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance1C9205ABC",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance1C9205ABC",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsDatabaseInstanceAlarms1InstanceDatabaseConnectionsAlarm9D96349D": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance1C9205ABC",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance1C9205ABC",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsDatabaseInstanceAlarms1InstanceDbLoadAlarm1CB04DA2": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance1C9205ABC",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance1C9205ABC",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsDatabaseInstanceAlarms1InstanceFreeLocalStorageAlarm29AE3EB6": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance1C9205ABC",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance1C9205ABC",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsDatabaseInstanceAlarms1InstanceFreeStorageSpaceAlarmD42D1EDD": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance1C9205ABC",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance1C9205ABC",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsDatabaseInstanceAlarms1InstanceFreeableMemoryAlarm11EFE5A0": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance1C9205ABC",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance1C9205ABC",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsDatabaseInstanceAlarms1InstanceReadLatencyAlarm3C62739B": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance1C9205ABC",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance1C9205ABC",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsDatabaseInstanceAlarms1InstanceWriteLatencyAlarm229E77E9": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance1C9205ABC",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance1C9205ABC",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsDatabaseInstanceAlarms2InstanceCpuUtilizationAlarmE3AB9791": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsDatabaseInstanceAlarms2InstanceDatabaseConnectionsAlarm6B26FED0": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsDatabaseInstanceAlarms2InstanceDbLoadAlarm9B3F9458": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsDatabaseInstanceAlarms2InstanceFreeLocalStorageAlarmDBA33340": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsDatabaseInstanceAlarms2InstanceFreeStorageSpaceAlarm7A7FB434": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsDatabaseInstanceAlarms2InstanceFreeableMemoryAlarmACEAFECC": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsDatabaseInstanceAlarms2InstanceReadLatencyAlarm955C49D3": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsDatabaseInstanceAlarms2InstanceWriteLatencyAlarm70D37FC4": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testvpc8985080E": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testvpcIGW2C2BA83F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testvpcVPCGW7060AA15": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testvpcprivateSubnet1RouteTable1D8B9208": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcprivateSubnet1RouteTableAssociation6CDEA04D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcprivateSubnet1RouteTable1D8B9208",
        },
        "SubnetId": Object {
          "Ref": "testvpcprivateSubnet1Subnet2E35BD58",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcprivateSubnet1Subnet2E35BD58": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcprivateSubnet2RouteTable790940DA": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcprivateSubnet2RouteTableAssociation5D307BB0": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcprivateSubnet2RouteTable790940DA",
        },
        "SubnetId": Object {
          "Ref": "testvpcprivateSubnet2Subnet60F9C8A0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcprivateSubnet2Subnet60F9C8A0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcprivateSubnet3RouteTable85B19E5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcprivateSubnet3RouteTableAssociationDA8B9B9A": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcprivateSubnet3RouteTable85B19E5E",
        },
        "SubnetId": Object {
          "Ref": "testvpcprivateSubnet3SubnetF4D12CC5",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcprivateSubnet3SubnetF4D12CC5": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcpublicSubnet1DefaultRouteF9C151E8": Object {
      "DependsOn": Array [
        "testvpcVPCGW7060AA15",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet1RouteTable465CD5DF",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testvpcpublicSubnet1RouteTable465CD5DF": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcpublicSubnet1RouteTableAssociation1D27724D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet1RouteTable465CD5DF",
        },
        "SubnetId": Object {
          "Ref": "testvpcpublicSubnet1Subnet7BCDDC7D",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcpublicSubnet1Subnet7BCDDC7D": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcpublicSubnet2DefaultRoute90DCE3DB": Object {
      "DependsOn": Array [
        "testvpcVPCGW7060AA15",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet2RouteTable2C61A6B3",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testvpcpublicSubnet2RouteTable2C61A6B3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcpublicSubnet2RouteTableAssociationDA0D277E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet2RouteTable2C61A6B3",
        },
        "SubnetId": Object {
          "Ref": "testvpcpublicSubnet2SubnetC35BC5E2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcpublicSubnet2SubnetC35BC5E2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcpublicSubnet3DefaultRouteD222611C": Object {
      "DependsOn": Array [
        "testvpcVPCGW7060AA15",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet3RouteTable26A1D7D0",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testvpcpublicSubnet3RouteTable26A1D7D0": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcpublicSubnet3RouteTableAssociation567F65EF": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet3RouteTable26A1D7D0",
        },
        "SubnetId": Object {
          "Ref": "testvpcpublicSubnet3Subnet7D129E66",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcpublicSubnet3Subnet7D129E66": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`DatabaseInstanceSnapshotWithExclusion 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "MySQLInstance216DD474": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "test",
        "DBName": "test",
        "DBSubnetGroupName": Object {
          "Ref": "MySQLInstanceSubnetGroupBBB46B1D",
        },
        "Engine": "mysql",
        "EngineVersion": "8.0.25",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceDatabaseConnectionsAlarmD77B1F7B": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceDbLoadAlarm992FC843": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceFreeLocalStorageAlarm8AF4EB33": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceFreeStorageSpaceAlarm50E6BC81": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceFreeableMemoryAlarm767C6F01": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceReadLatencyAlarm40D551B7": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceWriteLatencyAlarmBEB66DF5": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceSecretAttachmentAAD75603": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "MySQLInstance216DD474",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "MySQLInstanceSubnetGroupBBB46B1D": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for MySQLInstance database",
        "SubnetIds": Array [
          Object {
            "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
          },
          Object {
            "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
          },
          Object {
            "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testrdsFE79C7B1": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testrdsIGW90BA6F57": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testrdsVPCGW38EEFC29": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testrdsprivateSubnet1RouteTableAssociationAC8CE190": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet1RouteTableF5594CEE",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet1RouteTableF5594CEE": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet1Subnet49BD9E1E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet2RouteTableAssociation6EB95C83": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet2RouteTableC70C9425",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet2RouteTableC70C9425": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet2SubnetB79E90BA": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet3RouteTable603BFA5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet3RouteTableAssociation5ABD087D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet3RouteTable603BFA5E",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet3Subnet40FC1E62": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet1DefaultRoute364C8299": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet1RouteTable8DBFF328": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet1RouteTableAssociation59AC0B52": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet1Subnet8979A0B2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet1Subnet8979A0B2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet2DefaultRoute73946553": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet2RouteTable321F0C5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet2RouteTableAssociation15ADEE79": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet2Subnet911A79F8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet2Subnet911A79F8": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet3DefaultRoute35E316A7": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet3RouteTable47DA3E22": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet3RouteTableAssociation5D498271": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet3SubnetC9F68609",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet3SubnetC9F68609": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`SnapshotForDatabaseClusterConstruct 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AuroraMySQLCluster07727989": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "test",
        "DBClusterParameterGroupName": "default.aurora-mysql8.0",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMySQLClusterSubnetsD978BAC7",
        },
        "DatabaseName": "test",
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.07.0",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsAuroraBinLogReplicationLagAlarm9D8DF3FB": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect whether the writer instance is in an error state and can't replicate the source. This alarm is recommended only for Aurora MySQL.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster07727989",
              },
              " - AuroraBinLogReplicaLag",
            ],
          ],
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster07727989",
            },
          },
          Object {
            "Name": "Role",
            "Value": "WRITER",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "AuroraBinLogReplicaLag",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": -1,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsAuroraVolumeBytesLeftTotalAlarm02885ADE": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora cluster is to the volume size limit. This alarm can prevent an out-of-space error that occurs when your cluster runs out of space. This alarm is recommended only for Aurora MySQL.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster07727989",
              },
              " - AuroraVolumeBytesLeftTotal",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster07727989",
            },
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "AuroraVolumeBytesLeftTotal",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceCpuUtilizationAlarm80C7F245": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceDatabaseConnectionsAlarm6918AE75": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceDbLoadAlarm4599C2FE": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeLocalStorageAlarm6448D013": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeStorageSpaceAlarmA2ADE37A": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeableMemoryAlarm1CEFABC4": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceReadLatencyAlarmD5D46D24": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect0InstanceWriteLatencyAlarmEF7CE4B2": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceCpuUtilizationAlarm6AE51BA7": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceDatabaseConnectionsAlarmDD6B2221": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceDbLoadAlarmD6E7FA24": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeLocalStorageAlarmB44D7811": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeStorageSpaceAlarm00DCD4BC": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeableMemoryAlarmD1289914": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceReadLatencyAlarm94EC435C": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsRdsInstanceRecommendedAlarmsFromAspect1InstanceWriteLatencyAlarmB9566F14": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterSecretAttachment8439569D": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraMySQLClusterSubnetsD978BAC7": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for AuroraMySQLCluster database",
        "SubnetIds": Array [
          Object {
            "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
          },
          Object {
            "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
          },
          Object {
            "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AuroraMySQLClusterreaderinstance01C5FF86": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AuroraMySQLClusterwriterinstance657481ED",
        "testrdsprivateSubnet1RouteTableAssociationAC8CE190",
        "testrdsprivateSubnet2RouteTableAssociation6EB95C83",
        "testrdsprivateSubnet3RouteTableAssociation5ABD087D",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "reader-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 2,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMySQLClusterwriterinstance657481ED": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "testrdsprivateSubnet1RouteTableAssociationAC8CE190",
        "testrdsprivateSubnet2RouteTableAssociation6EB95C83",
        "testrdsprivateSubnet3RouteTableAssociation5ABD087D",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "writer-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testrdsFE79C7B1": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testrdsIGW90BA6F57": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testrdsVPCGW38EEFC29": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testrdsprivateSubnet1RouteTableAssociationAC8CE190": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet1RouteTableF5594CEE",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet1RouteTableF5594CEE": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet1Subnet49BD9E1E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet2RouteTableAssociation6EB95C83": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet2RouteTableC70C9425",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet2RouteTableC70C9425": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet2SubnetB79E90BA": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet3RouteTable603BFA5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet3RouteTableAssociation5ABD087D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet3RouteTable603BFA5E",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet3Subnet40FC1E62": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet1DefaultRoute364C8299": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet1RouteTable8DBFF328": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet1RouteTableAssociation59AC0B52": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet1Subnet8979A0B2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet1Subnet8979A0B2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet2DefaultRoute73946553": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet2RouteTable321F0C5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet2RouteTableAssociation15ADEE79": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet2Subnet911A79F8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet2Subnet911A79F8": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet3DefaultRoute35E316A7": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet3RouteTable47DA3E22": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet3RouteTableAssociation5D498271": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet3SubnetC9F68609",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet3SubnetC9F68609": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`SnapshotForDatabaseInstanceConstruct 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "MySQLInstance216DD474": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "test",
        "DBName": "test",
        "DBSubnetGroupName": Object {
          "Ref": "MySQLInstanceSubnetGroupBBB46B1D",
        },
        "Engine": "mysql",
        "EngineVersion": "8.0.25",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsInstanceCpuUtilizationAlarmAC0BE9AD": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsInstanceDatabaseConnectionsAlarm64287E20": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsInstanceDbLoadAlarmEEADB342": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsInstanceFreeLocalStorageAlarmEF2F0975": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsInstanceFreeStorageSpaceAlarmD7D4CE8F": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsInstanceFreeableMemoryAlarm281378B2": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsInstanceReadLatencyAlarmB71B5FFD": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsInstanceWriteLatencyAlarm4E9675ED": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceSecretAttachmentAAD75603": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "MySQLInstance216DD474",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "MySQLInstanceSubnetGroupBBB46B1D": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for MySQLInstance database",
        "SubnetIds": Array [
          Object {
            "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
          },
          Object {
            "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
          },
          Object {
            "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testrdsFE79C7B1": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testrdsIGW90BA6F57": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testrdsVPCGW38EEFC29": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testrdsprivateSubnet1RouteTableAssociationAC8CE190": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet1RouteTableF5594CEE",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet1RouteTableF5594CEE": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet1Subnet49BD9E1E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet2RouteTableAssociation6EB95C83": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet2RouteTableC70C9425",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet2RouteTableC70C9425": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet2SubnetB79E90BA": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet3RouteTable603BFA5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet3RouteTableAssociation5ABD087D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet3RouteTable603BFA5E",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet3Subnet40FC1E62": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet1DefaultRoute364C8299": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet1RouteTable8DBFF328": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet1RouteTableAssociation59AC0B52": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet1Subnet8979A0B2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet1Subnet8979A0B2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet2DefaultRoute73946553": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet2RouteTable321F0C5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet2RouteTableAssociation15ADEE79": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet2Subnet911A79F8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet2Subnet911A79F8": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet3DefaultRoute35E316A7": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet3RouteTable47DA3E22": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet3RouteTableAssociation5D498271": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet3SubnetC9F68609",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet3SubnetC9F68609": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`alarms can be applied individually to clusters using extended construct 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AuroraMySQLCluster07727989": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "test",
        "DBClusterParameterGroupName": "default.aurora-mysql8.0",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMySQLClusterSubnetsD978BAC7",
        },
        "DatabaseName": "test",
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.07.0",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "AuroraMySQLClusterAuroraBinLogReplicationLagAlarmBBFE3BE1": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect whether the writer instance is in an error state and can't replicate the source. This alarm is recommended only for Aurora MySQL.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster07727989",
              },
              " - AuroraBinLogReplicaLag",
            ],
          ],
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster07727989",
            },
          },
          Object {
            "Name": "Role",
            "Value": "WRITER",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "AuroraBinLogReplicaLag",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": -1,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterAuroraVolumeBytesLeftTotalAlarmA1CA1DD0": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora cluster is to the volume size limit. This alarm can prevent an out-of-space error that occurs when your cluster runs out of space. This alarm is recommended only for Aurora MySQL.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster07727989",
              },
              " - AuroraVolumeBytesLeftTotal",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster07727989",
            },
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "AuroraVolumeBytesLeftTotal",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterSecretAttachment8439569D": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraMySQLClusterSubnetsD978BAC7": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for AuroraMySQLCluster database",
        "SubnetIds": Array [
          Object {
            "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
          },
          Object {
            "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
          },
          Object {
            "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AuroraMySQLClusterreaderinstance01C5FF86": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AuroraMySQLClusterwriterinstance657481ED",
        "testrdsprivateSubnet1RouteTableAssociationAC8CE190",
        "testrdsprivateSubnet2RouteTableAssociation6EB95C83",
        "testrdsprivateSubnet3RouteTableAssociation5ABD087D",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "reader-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 2,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMySQLClusterwriterinstance657481ED": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "testrdsprivateSubnet1RouteTableAssociationAC8CE190",
        "testrdsprivateSubnet2RouteTableAssociation6EB95C83",
        "testrdsprivateSubnet3RouteTableAssociation5ABD087D",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "writer-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testrdsFE79C7B1": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testrdsIGW90BA6F57": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testrdsVPCGW38EEFC29": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testrdsprivateSubnet1RouteTableAssociationAC8CE190": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet1RouteTableF5594CEE",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet1RouteTableF5594CEE": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet1Subnet49BD9E1E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet2RouteTableAssociation6EB95C83": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet2RouteTableC70C9425",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet2RouteTableC70C9425": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet2SubnetB79E90BA": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet3RouteTable603BFA5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet3RouteTableAssociation5ABD087D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet3RouteTable603BFA5E",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet3Subnet40FC1E62": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet1DefaultRoute364C8299": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet1RouteTable8DBFF328": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet1RouteTableAssociation59AC0B52": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet1Subnet8979A0B2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet1Subnet8979A0B2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet2DefaultRoute73946553": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet2RouteTable321F0C5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet2RouteTableAssociation15ADEE79": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet2Subnet911A79F8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet2Subnet911A79F8": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet3DefaultRoute35E316A7": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet3RouteTable47DA3E22": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet3RouteTableAssociation5D498271": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet3SubnetC9F68609",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet3SubnetC9F68609": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`alarms can be applied individually to instances using extended construct 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "MySQLInstance216DD474": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "test",
        "DBName": "test",
        "DBSubnetGroupName": Object {
          "Ref": "MySQLInstanceSubnetGroupBBB46B1D",
        },
        "Engine": "mysql",
        "EngineVersion": "8.0.25",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "MySQLInstanceInstanceCpuUtilizationAlarmBF7F41F0": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceInstanceDatabaseConnectionsAlarm109ACFBA": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceInstanceDbLoadAlarm1B9893B4": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceInstanceFreeLocalStorageAlarm8FC4857F": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceInstanceFreeStorageSpaceAlarmD6C4C08E": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceInstanceFreeableMemoryAlarm3309E6AF": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceInstanceReadLatencyAlarm5C359CA1": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceInstanceWriteLatencyAlarm365C1674": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceSecretAttachmentAAD75603": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "MySQLInstance216DD474",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "MySQLInstanceSubnetGroupBBB46B1D": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for MySQLInstance database",
        "SubnetIds": Array [
          Object {
            "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
          },
          Object {
            "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
          },
          Object {
            "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testrdsFE79C7B1": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testrdsIGW90BA6F57": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testrdsVPCGW38EEFC29": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testrdsprivateSubnet1RouteTableAssociationAC8CE190": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet1RouteTableF5594CEE",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet1RouteTableF5594CEE": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet1Subnet49BD9E1E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet2RouteTableAssociation6EB95C83": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet2RouteTableC70C9425",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet2RouteTableC70C9425": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet2SubnetB79E90BA": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet3RouteTable603BFA5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet3RouteTableAssociation5ABD087D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet3RouteTable603BFA5E",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet3Subnet40FC1E62": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet1DefaultRoute364C8299": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet1RouteTable8DBFF328": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet1RouteTableAssociation59AC0B52": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet1Subnet8979A0B2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet1Subnet8979A0B2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet2DefaultRoute73946553": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet2RouteTable321F0C5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet2RouteTableAssociation15ADEE79": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet2Subnet911A79F8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet2Subnet911A79F8": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet3DefaultRoute35E316A7": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet3RouteTable47DA3E22": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet3RouteTableAssociation5D498271": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet3SubnetC9F68609",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet3SubnetC9F68609": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`default alarm actions are overridden when individual alarm actions are provided in configuration 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "LambdaD247545B": Object {
      "DependsOn": Array [
        "LambdaServiceRoleA8ED4D3B",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "exports.handler = async (event) => { console.log(event); }",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LambdaServiceRoleA8ED4D3B",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaInstanceCpuUtilizationAlarmAlarmPermission63943E1C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": "123456789012",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "rdsClusterAlarmsInstanceCpuUtilizationAlarm7F95C9F7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaInstanceDatabaseConnectionsAlarmAlarmPermissionCC8B4DBC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": "123456789012",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "rdsClusterAlarmsInstanceDatabaseConnectionsAlarmCEBE3C9E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaInstanceDbLoadAlarmAlarmPermission6C51C9BF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": "123456789012",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "rdsClusterAlarmsInstanceDbLoadAlarmA4D97C36",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaInstanceFreeLocalStorageAlarmAlarmPermission19024667": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": "123456789012",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "rdsClusterAlarmsInstanceFreeLocalStorageAlarmEDB111DB",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaInstanceFreeStorageSpaceAlarmAlarmPermissionE4A3B6F4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": "123456789012",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "rdsClusterAlarmsInstanceFreeStorageSpaceAlarmB21D96FA",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaInstanceFreeableMemoryAlarmAlarmPermission52CB7CC4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": "123456789012",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "rdsClusterAlarmsInstanceFreeableMemoryAlarm6742A144",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaInstanceReadLatencyAlarmAlarmPermission27583D60": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": "123456789012",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "rdsClusterAlarmsInstanceReadLatencyAlarm197D15C2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaInstanceWriteLatencyAlarmAlarmPermissionC571A024": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": "123456789012",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "rdsClusterAlarmsInstanceWriteLatencyAlarmECF4F2D8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaServiceRoleA8ED4D3B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MySQLInstance216DD474": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "test",
        "DBName": "test",
        "DBSubnetGroupName": Object {
          "Ref": "MySQLInstanceSubnetGroupBBB46B1D",
        },
        "Engine": "mysql",
        "EngineVersion": "8.0.25",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "MySQLInstanceSecretAttachmentAAD75603": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "MySQLInstance216DD474",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "MySQLInstanceSubnetGroupBBB46B1D": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for MySQLInstance database",
        "SubnetIds": Array [
          Object {
            "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
          },
          Object {
            "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
          },
          Object {
            "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TopicBFC7AF6E": Object {
      "Type": "AWS::SNS::Topic",
    },
    "rdsClusterAlarmsInstanceCpuUtilizationAlarm7F95C9F7": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsInstanceDatabaseConnectionsAlarmCEBE3C9E": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsInstanceDbLoadAlarmA4D97C36": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "InsufficientDataActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsInstanceFreeLocalStorageAlarmEDB111DB": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsInstanceFreeStorageSpaceAlarmB21D96FA": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "InsufficientDataActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsInstanceFreeableMemoryAlarm6742A144": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "InsufficientDataActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsInstanceReadLatencyAlarm197D15C2": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "InsufficientDataActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdsClusterAlarmsInstanceWriteLatencyAlarmECF4F2D8": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "InsufficientDataActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testrdsFE79C7B1": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testrdsIGW90BA6F57": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testrdsVPCGW38EEFC29": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testrdsprivateSubnet1RouteTableAssociationAC8CE190": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet1RouteTableF5594CEE",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet1RouteTableF5594CEE": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet1Subnet49BD9E1E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet2RouteTableAssociation6EB95C83": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet2RouteTableC70C9425",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet2RouteTableC70C9425": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet2SubnetB79E90BA": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet3RouteTable603BFA5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet3RouteTableAssociation5ABD087D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet3RouteTable603BFA5E",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet3Subnet40FC1E62": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet1DefaultRoute364C8299": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet1RouteTable8DBFF328": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet1RouteTableAssociation59AC0B52": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet1Subnet8979A0B2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet1Subnet8979A0B2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet2DefaultRoute73946553": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet2RouteTable321F0C5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet2RouteTableAssociation15ADEE79": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet2Subnet911A79F8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet2Subnet911A79F8": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet3DefaultRoute35E316A7": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet3RouteTable47DA3E22": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet3RouteTableAssociation5D498271": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet3SubnetC9F68609",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet3SubnetC9F68609": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`optional alarm configurations can be overwritten 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AuroraMySQLCluster07727989": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "test1",
        "DBClusterParameterGroupName": "default.aurora-mysql8.0",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMySQLClusterSubnetsD978BAC7",
        },
        "DatabaseName": "test",
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.07.0",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectAuroraBinLogReplicationLagAlarm29F0F945": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomAuroraBinLogReplicationLagAlarm",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster07727989",
            },
          },
          Object {
            "Name": "Role",
            "Value": "WRITER",
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "AuroraBinLogReplicaLag",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectAuroraVolumeBytesLeftTotalAlarm187FB1CE": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomAuroraVolumeBytesLeftTotalAlarm",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster07727989",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "AuroraVolumeBytesLeftTotal",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceCpuUtilizationAlarm4308392C": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomCpuUtilizationAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceDatabaseConnectionsAlarm7AD85065": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomDatabaseConnectionsAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceDbLoadAlarmEBA41FA0": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomDbLoadAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeLocalStorageAlarm0DD430AF": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomFreeLocalStorageAlarm",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeStorageSpaceAlarm62694DD9": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomFreeStorageSpaceAlarm",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeableMemoryAlarmBE2633BC": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomFreeableMemoryAlarm",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceReadLatencyAlarmDDE9F446": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomReadLatencyAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "ExtendedStatistic": "p90",
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Threshold": 20,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceWriteLatencyAlarmC076CA18": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomWriteLatencyAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "ExtendedStatistic": "p90",
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Threshold": 20,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceCpuUtilizationAlarm3A90CA8F": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomCpuUtilizationAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance125A3C1D4",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceDatabaseConnectionsAlarmE63442F4": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomDatabaseConnectionsAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance125A3C1D4",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceDbLoadAlarm990FC5EC": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomDbLoadAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance125A3C1D4",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeLocalStorageAlarm419ACAA5": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomFreeLocalStorageAlarm",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance125A3C1D4",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeStorageSpaceAlarmCAB33960": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomFreeStorageSpaceAlarm",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance125A3C1D4",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeableMemoryAlarm0E4C2765": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomFreeableMemoryAlarm",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance125A3C1D4",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceReadLatencyAlarmD65F23E5": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomReadLatencyAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance125A3C1D4",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "ExtendedStatistic": "p90",
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Threshold": 20,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceWriteLatencyAlarm52B496B6": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomWriteLatencyAlarm",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance125A3C1D4",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "ExtendedStatistic": "p90",
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Threshold": 20,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterSecretAttachment8439569D": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraMySQLClusterSubnetsD978BAC7": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for AuroraMySQLCluster database",
        "SubnetIds": Array [
          Object {
            "Ref": "testvpcprivateSubnet1Subnet2E35BD58",
          },
          Object {
            "Ref": "testvpcprivateSubnet2Subnet60F9C8A0",
          },
          Object {
            "Ref": "testvpcprivateSubnet3SubnetF4D12CC5",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AuroraMySQLClusterreaderinstance125A3C1D4": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AuroraMySQLClusterwriterinstance657481ED",
        "testvpcprivateSubnet1RouteTableAssociation6CDEA04D",
        "testvpcprivateSubnet2RouteTableAssociation5D307BB0",
        "testvpcprivateSubnet3RouteTableAssociationDA8B9B9A",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "reader-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 2,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMySQLClusterwriterinstance657481ED": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "testvpcprivateSubnet1RouteTableAssociation6CDEA04D",
        "testvpcprivateSubnet2RouteTableAssociation5D307BB0",
        "testvpcprivateSubnet3RouteTableAssociationDA8B9B9A",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "writer-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TopicBFC7AF6E": Object {
      "Type": "AWS::SNS::Topic",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testvpc8985080E": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testvpcIGW2C2BA83F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testvpcVPCGW7060AA15": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testvpcprivateSubnet1RouteTable1D8B9208": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcprivateSubnet1RouteTableAssociation6CDEA04D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcprivateSubnet1RouteTable1D8B9208",
        },
        "SubnetId": Object {
          "Ref": "testvpcprivateSubnet1Subnet2E35BD58",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcprivateSubnet1Subnet2E35BD58": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcprivateSubnet2RouteTable790940DA": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcprivateSubnet2RouteTableAssociation5D307BB0": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcprivateSubnet2RouteTable790940DA",
        },
        "SubnetId": Object {
          "Ref": "testvpcprivateSubnet2Subnet60F9C8A0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcprivateSubnet2Subnet60F9C8A0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcprivateSubnet3RouteTable85B19E5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcprivateSubnet3RouteTableAssociationDA8B9B9A": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcprivateSubnet3RouteTable85B19E5E",
        },
        "SubnetId": Object {
          "Ref": "testvpcprivateSubnet3SubnetF4D12CC5",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcprivateSubnet3SubnetF4D12CC5": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcpublicSubnet1DefaultRouteF9C151E8": Object {
      "DependsOn": Array [
        "testvpcVPCGW7060AA15",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet1RouteTable465CD5DF",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testvpcpublicSubnet1RouteTable465CD5DF": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcpublicSubnet1RouteTableAssociation1D27724D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet1RouteTable465CD5DF",
        },
        "SubnetId": Object {
          "Ref": "testvpcpublicSubnet1Subnet7BCDDC7D",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcpublicSubnet1Subnet7BCDDC7D": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcpublicSubnet2DefaultRoute90DCE3DB": Object {
      "DependsOn": Array [
        "testvpcVPCGW7060AA15",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet2RouteTable2C61A6B3",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testvpcpublicSubnet2RouteTable2C61A6B3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcpublicSubnet2RouteTableAssociationDA0D277E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet2RouteTable2C61A6B3",
        },
        "SubnetId": Object {
          "Ref": "testvpcpublicSubnet2SubnetC35BC5E2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcpublicSubnet2SubnetC35BC5E2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcpublicSubnet3DefaultRouteD222611C": Object {
      "DependsOn": Array [
        "testvpcVPCGW7060AA15",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet3RouteTable26A1D7D0",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testvpcpublicSubnet3RouteTable26A1D7D0": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcpublicSubnet3RouteTableAssociation567F65EF": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet3RouteTable26A1D7D0",
        },
        "SubnetId": Object {
          "Ref": "testvpcpublicSubnet3Subnet7D129E66",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcpublicSubnet3Subnet7D129E66": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`stack should contain cluster recommended alarms for the specific engine if cluster recommended alarms aspect is applied with no exclusions 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AuroraPostgresClusterFE4B644F": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "test",
        "DBClusterParameterGroupName": "default.aurora-postgresql12",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraPostgresClusterSubnets1F9152B4",
        },
        "DatabaseName": "test",
        "Engine": "aurora-postgresql",
        "EngineVersion": "12.19",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackAuroraPostgresClusterSecretB9BB206E3fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "Port": 5432,
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceCpuUtilizationAlarm84E5BA2C": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceDatabaseConnectionsAlarmAA29B15B": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceDbLoadAlarm4210D4B2": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeLocalStorageAlarm0721E0D1": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeStorageSpaceAlarm374F9798": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeableMemoryAlarm0611CBE3": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceReadLatencyAlarmF7909388": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceWriteLatencyAlarmA874C6F2": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterwriterinstanceCF5A69FE",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceCpuUtilizationAlarm66E5153B": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceDatabaseConnectionsAlarm24505EC6": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceDbLoadAlarm7A918E9E": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeLocalStorageAlarm2A26B9B0": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeStorageSpaceAlarm0156CC58": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeableMemoryAlarm1470044D": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceReadLatencyAlarmCA3921D3": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceWriteLatencyAlarm79F919B3": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraPostgresClusterreaderinstanceFA3B880A",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraPostgresClusterSecretAttachmentD1FDCC8D": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackAuroraPostgresClusterSecretB9BB206E3fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "AuroraPostgresClusterFE4B644F",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraPostgresClusterSubnets1F9152B4": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for AuroraPostgresCluster database",
        "SubnetIds": Array [
          Object {
            "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
          },
          Object {
            "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
          },
          Object {
            "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AuroraPostgresClusterreaderinstanceFA3B880A": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AuroraPostgresClusterwriterinstanceCF5A69FE",
        "testrdsprivateSubnet1RouteTableAssociationAC8CE190",
        "testrdsprivateSubnet2RouteTableAssociation6EB95C83",
        "testrdsprivateSubnet3RouteTableAssociation5ABD087D",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraPostgresClusterFE4B644F",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "reader-instance",
        "Engine": "aurora-postgresql",
        "PromotionTier": 2,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraPostgresClusterwriterinstanceCF5A69FE": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "testrdsprivateSubnet1RouteTableAssociationAC8CE190",
        "testrdsprivateSubnet2RouteTableAssociation6EB95C83",
        "testrdsprivateSubnet3RouteTableAssociation5ABD087D",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraPostgresClusterFE4B644F",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "writer-instance",
        "Engine": "aurora-postgresql",
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "TestStackAuroraPostgresClusterSecretB9BB206E3fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testrdsFE79C7B1": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testrdsIGW90BA6F57": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testrdsVPCGW38EEFC29": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testrdsprivateSubnet1RouteTableAssociationAC8CE190": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet1RouteTableF5594CEE",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet1RouteTableF5594CEE": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet1Subnet49BD9E1E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet2RouteTableAssociation6EB95C83": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet2RouteTableC70C9425",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet2RouteTableC70C9425": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet2SubnetB79E90BA": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet3RouteTable603BFA5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet3RouteTableAssociation5ABD087D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet3RouteTable603BFA5E",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet3Subnet40FC1E62": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet1DefaultRoute364C8299": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet1RouteTable8DBFF328": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet1RouteTableAssociation59AC0B52": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet1Subnet8979A0B2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet1Subnet8979A0B2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet2DefaultRoute73946553": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet2RouteTable321F0C5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet2RouteTableAssociation15ADEE79": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet2Subnet911A79F8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet2Subnet911A79F8": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet3DefaultRoute35E316A7": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet3RouteTable47DA3E22": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet3RouteTableAssociation5D498271": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet3SubnetC9F68609",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet3SubnetC9F68609": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`stack should contain cluster recommended alarms if cluster recommended alarms aspect is applied with no exclusions 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AuroraMySQLCluster07727989": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "test",
        "DBClusterParameterGroupName": "default.aurora-mysql8.0",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMySQLClusterSubnetsD978BAC7",
        },
        "DatabaseName": "test",
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.07.0",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectAuroraBinLogReplicationLagAlarm29F0F945": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect whether the writer instance is in an error state and can't replicate the source. This alarm is recommended only for Aurora MySQL.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster07727989",
              },
              " - AuroraBinLogReplicaLag",
            ],
          ],
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster07727989",
            },
          },
          Object {
            "Name": "Role",
            "Value": "WRITER",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "AuroraBinLogReplicaLag",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": -1,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectAuroraVolumeBytesLeftTotalAlarm187FB1CE": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora cluster is to the volume size limit. This alarm can prevent an out-of-space error that occurs when your cluster runs out of space. This alarm is recommended only for Aurora MySQL.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster07727989",
              },
              " - AuroraVolumeBytesLeftTotal",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster07727989",
            },
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "AuroraVolumeBytesLeftTotal",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceCpuUtilizationAlarm4308392C": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceDatabaseConnectionsAlarm7AD85065": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceDbLoadAlarmEBA41FA0": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeLocalStorageAlarm0DD430AF": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeStorageSpaceAlarm62694DD9": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeableMemoryAlarmBE2633BC": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceReadLatencyAlarmDDE9F446": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceWriteLatencyAlarmC076CA18": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterwriterinstance657481ED",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterwriterinstance657481ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceCpuUtilizationAlarm3A90CA8F": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceDatabaseConnectionsAlarmE63442F4": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceDbLoadAlarm990FC5EC": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeLocalStorageAlarm419ACAA5": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeStorageSpaceAlarmCAB33960": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeableMemoryAlarm0E4C2765": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceReadLatencyAlarmD65F23E5": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterRdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceWriteLatencyAlarm52B496B6": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLClusterreaderinstance01C5FF86",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLClusterSecretAttachment8439569D": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraMySQLClusterSubnetsD978BAC7": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for AuroraMySQLCluster database",
        "SubnetIds": Array [
          Object {
            "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
          },
          Object {
            "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
          },
          Object {
            "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AuroraMySQLClusterreaderinstance01C5FF86": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AuroraMySQLClusterwriterinstance657481ED",
        "testrdsprivateSubnet1RouteTableAssociationAC8CE190",
        "testrdsprivateSubnet2RouteTableAssociation6EB95C83",
        "testrdsprivateSubnet3RouteTableAssociation5ABD087D",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "reader-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 2,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMySQLClusterwriterinstance657481ED": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "testrdsprivateSubnet1RouteTableAssociationAC8CE190",
        "testrdsprivateSubnet2RouteTableAssociation6EB95C83",
        "testrdsprivateSubnet3RouteTableAssociation5ABD087D",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster07727989",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "writer-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "TestStackAuroraMySQLClusterSecretC0958D523fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testrdsFE79C7B1": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testrdsIGW90BA6F57": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testrdsVPCGW38EEFC29": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testrdsprivateSubnet1RouteTableAssociationAC8CE190": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet1RouteTableF5594CEE",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet1RouteTableF5594CEE": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet1Subnet49BD9E1E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet2RouteTableAssociation6EB95C83": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet2RouteTableC70C9425",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet2RouteTableC70C9425": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet2SubnetB79E90BA": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet3RouteTable603BFA5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet3RouteTableAssociation5ABD087D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet3RouteTable603BFA5E",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet3Subnet40FC1E62": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet1DefaultRoute364C8299": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet1RouteTable8DBFF328": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet1RouteTableAssociation59AC0B52": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet1Subnet8979A0B2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet1Subnet8979A0B2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet2DefaultRoute73946553": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet2RouteTable321F0C5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet2RouteTableAssociation15ADEE79": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet2Subnet911A79F8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet2Subnet911A79F8": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet3DefaultRoute35E316A7": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet3RouteTable47DA3E22": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet3RouteTableAssociation5D498271": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet3SubnetC9F68609",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet3SubnetC9F68609": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`stack should contain instance recommended alarms if instance recommended alarms aspect is applied with no exclusions 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "MySQLInstance216DD474": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "test",
        "DBName": "test",
        "DBSubnetGroupName": Object {
          "Ref": "MySQLInstanceSubnetGroupBBB46B1D",
        },
        "Engine": "mysql",
        "EngineVersion": "8.0.25",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceCpuUtilizationAlarm0EAE0B88": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceDatabaseConnectionsAlarmD77B1F7B": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceDbLoadAlarm992FC843": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceFreeLocalStorageAlarm8AF4EB33": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceFreeStorageSpaceAlarm50E6BC81": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceFreeableMemoryAlarm767C6F01": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceReadLatencyAlarm40D551B7": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceRdsInstanceRecommendedAlarmsFromAspectInstanceWriteLatencyAlarmBEB66DF5": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance216DD474",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance216DD474",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstanceSecretAttachmentAAD75603": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "MySQLInstance216DD474",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "MySQLInstanceSubnetGroupBBB46B1D": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for MySQLInstance database",
        "SubnetIds": Array [
          Object {
            "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
          },
          Object {
            "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
          },
          Object {
            "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "TestStackMySQLInstanceSecretF412E3073fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testrdsFE79C7B1": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testrdsIGW90BA6F57": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-rds",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testrdsVPCGW38EEFC29": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testrdsprivateSubnet1RouteTableAssociationAC8CE190": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet1RouteTableF5594CEE",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet1Subnet49BD9E1E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet1RouteTableF5594CEE": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet1Subnet49BD9E1E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet2RouteTableAssociation6EB95C83": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet2RouteTableC70C9425",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet2SubnetB79E90BA",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet2RouteTableC70C9425": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet2SubnetB79E90BA": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdsprivateSubnet3RouteTable603BFA5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdsprivateSubnet3RouteTableAssociation5ABD087D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdsprivateSubnet3RouteTable603BFA5E",
        },
        "SubnetId": Object {
          "Ref": "testrdsprivateSubnet3Subnet40FC1E62",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdsprivateSubnet3Subnet40FC1E62": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet1DefaultRoute364C8299": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet1RouteTable8DBFF328": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet1RouteTableAssociation59AC0B52": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet1RouteTable8DBFF328",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet1Subnet8979A0B2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet1Subnet8979A0B2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet2DefaultRoute73946553": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet2RouteTable321F0C5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet2RouteTableAssociation15ADEE79": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet2RouteTable321F0C5E",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet2Subnet911A79F8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet2Subnet911A79F8": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testrdspublicSubnet3DefaultRoute35E316A7": Object {
      "DependsOn": Array [
        "testrdsVPCGW38EEFC29",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testrdsIGW90BA6F57",
        },
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testrdspublicSubnet3RouteTable47DA3E22": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testrdspublicSubnet3RouteTableAssociation5D498271": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testrdspublicSubnet3RouteTable47DA3E22",
        },
        "SubnetId": Object {
          "Ref": "testrdspublicSubnet3SubnetC9F68609",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testrdspublicSubnet3SubnetC9F68609": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-rds/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testrdsFE79C7B1",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`when a cluster is excluded from the aspect config it should not have alarms 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AuroraMySQLCluster1C9BEF143": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "test1",
        "DBClusterParameterGroupName": "default.aurora-mysql8.0",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMySQLCluster1Subnets1541BEC0",
        },
        "DatabaseName": "test",
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.07.0",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackAuroraMySQLCluster1Secret517556B93fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "AuroraMySQLCluster1SecretAttachment1A8C0F4D": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackAuroraMySQLCluster1Secret517556B93fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "AuroraMySQLCluster1C9BEF143",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraMySQLCluster1Subnets1541BEC0": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for AuroraMySQLCluster1 database",
        "SubnetIds": Array [
          Object {
            "Ref": "testvpcprivateSubnet1Subnet2E35BD58",
          },
          Object {
            "Ref": "testvpcprivateSubnet2Subnet60F9C8A0",
          },
          Object {
            "Ref": "testvpcprivateSubnet3SubnetF4D12CC5",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AuroraMySQLCluster1readerinstance1B207CD19": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AuroraMySQLCluster1writerinstance6EFAE53D",
        "testvpcprivateSubnet1RouteTableAssociation6CDEA04D",
        "testvpcprivateSubnet2RouteTableAssociation5D307BB0",
        "testvpcprivateSubnet3RouteTableAssociationDA8B9B9A",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster1C9BEF143",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "reader-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 2,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMySQLCluster1writerinstance6EFAE53D": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "testvpcprivateSubnet1RouteTableAssociation6CDEA04D",
        "testvpcprivateSubnet2RouteTableAssociation5D307BB0",
        "testvpcprivateSubnet3RouteTableAssociationDA8B9B9A",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster1C9BEF143",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "writer-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMySQLCluster2CC71E932": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "test2",
        "DBClusterParameterGroupName": "default.aurora-mysql8.0",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraMySQLCluster2Subnets59775672",
        },
        "DatabaseName": "test",
        "Engine": "aurora-mysql",
        "EngineVersion": "8.0.mysql_aurora.3.07.0",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackAuroraMySQLCluster2Secret730E3C133fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectAuroraBinLogReplicationLagAlarm6A156C41": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect whether the writer instance is in an error state and can't replicate the source. This alarm is recommended only for Aurora MySQL.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2CC71E932",
              },
              " - AuroraBinLogReplicaLag",
            ],
          ],
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2CC71E932",
            },
          },
          Object {
            "Name": "Role",
            "Value": "WRITER",
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "AuroraBinLogReplicaLag",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": -1,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectAuroraVolumeBytesLeftTotalAlarmC0B7F9CB": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora cluster is to the volume size limit. This alarm can prevent an out-of-space error that occurs when your cluster runs out of space. This alarm is recommended only for Aurora MySQL.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2CC71E932",
              },
              " - AuroraVolumeBytesLeftTotal",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2CC71E932",
            },
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "AuroraVolumeBytesLeftTotal",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceCpuUtilizationAlarmF2C5F2A5": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceDatabaseConnectionsAlarmD28E21E2": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceDbLoadAlarmFCE10023": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeLocalStorageAlarm4DE555C8": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeStorageSpaceAlarm51DE9AF1": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceFreeableMemoryAlarmE7F3E336": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceReadLatencyAlarm4A36695F": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect0InstanceWriteLatencyAlarm2DFE6CA1": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2writerinstanceCC537EE5",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceCpuUtilizationAlarmDDDCC440": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceDatabaseConnectionsAlarmD83D560B": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceDbLoadAlarm8E1C6E5A": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeLocalStorageAlarmE86EF752": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeStorageSpaceAlarm566AFFCD": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceFreeableMemoryAlarmDE861B30": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceReadLatencyAlarm69206DAB": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect1InstanceWriteLatencyAlarm0AB72FA6": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance1260F0C9F",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect2InstanceCpuUtilizationAlarmE3377932": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect2InstanceDatabaseConnectionsAlarm6E70F5FE": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect2InstanceDbLoadAlarmB6671819": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect2InstanceFreeLocalStorageAlarm3117CCBA": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect2InstanceFreeStorageSpaceAlarm574C9216": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect2InstanceFreeableMemoryAlarm4831D98D": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect2InstanceReadLatencyAlarm0BF0F670": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2RdsAuroraRecommendedAlarmsFromAspectRdsInstanceRecommendedAlarmsFromAspect2InstanceWriteLatencyAlarm9BA37784": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "AuroraMySQLCluster2readerinstance2062E00ED",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraMySQLCluster2SecretAttachment881A9E09": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackAuroraMySQLCluster2Secret730E3C133fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "AuroraMySQLCluster2CC71E932",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraMySQLCluster2Subnets59775672": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for AuroraMySQLCluster2 database",
        "SubnetIds": Array [
          Object {
            "Ref": "testvpcprivateSubnet1Subnet2E35BD58",
          },
          Object {
            "Ref": "testvpcprivateSubnet2Subnet60F9C8A0",
          },
          Object {
            "Ref": "testvpcprivateSubnet3SubnetF4D12CC5",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "AuroraMySQLCluster2readerinstance1260F0C9F": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AuroraMySQLCluster2writerinstanceCC537EE5",
        "testvpcprivateSubnet1RouteTableAssociation6CDEA04D",
        "testvpcprivateSubnet2RouteTableAssociation5D307BB0",
        "testvpcprivateSubnet3RouteTableAssociationDA8B9B9A",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster2CC71E932",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "reader-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 2,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMySQLCluster2readerinstance2062E00ED": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AuroraMySQLCluster2writerinstanceCC537EE5",
        "testvpcprivateSubnet1RouteTableAssociation6CDEA04D",
        "testvpcprivateSubnet2RouteTableAssociation5D307BB0",
        "testvpcprivateSubnet3RouteTableAssociationDA8B9B9A",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster2CC71E932",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "reader-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 2,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraMySQLCluster2writerinstanceCC537EE5": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "testvpcprivateSubnet1RouteTableAssociation6CDEA04D",
        "testvpcprivateSubnet2RouteTableAssociation5D307BB0",
        "testvpcprivateSubnet3RouteTableAssociationDA8B9B9A",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "AuroraMySQLCluster2CC71E932",
        },
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "writer-instance",
        "Engine": "aurora-mysql",
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "TestStackAuroraMySQLCluster1Secret517556B93fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TestStackAuroraMySQLCluster2Secret730E3C133fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testvpc8985080E": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testvpcIGW2C2BA83F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testvpcVPCGW7060AA15": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testvpcprivateSubnet1RouteTable1D8B9208": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcprivateSubnet1RouteTableAssociation6CDEA04D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcprivateSubnet1RouteTable1D8B9208",
        },
        "SubnetId": Object {
          "Ref": "testvpcprivateSubnet1Subnet2E35BD58",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcprivateSubnet1Subnet2E35BD58": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcprivateSubnet2RouteTable790940DA": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcprivateSubnet2RouteTableAssociation5D307BB0": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcprivateSubnet2RouteTable790940DA",
        },
        "SubnetId": Object {
          "Ref": "testvpcprivateSubnet2Subnet60F9C8A0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcprivateSubnet2Subnet60F9C8A0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcprivateSubnet3RouteTable85B19E5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcprivateSubnet3RouteTableAssociationDA8B9B9A": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcprivateSubnet3RouteTable85B19E5E",
        },
        "SubnetId": Object {
          "Ref": "testvpcprivateSubnet3SubnetF4D12CC5",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcprivateSubnet3SubnetF4D12CC5": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcpublicSubnet1DefaultRouteF9C151E8": Object {
      "DependsOn": Array [
        "testvpcVPCGW7060AA15",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet1RouteTable465CD5DF",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testvpcpublicSubnet1RouteTable465CD5DF": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcpublicSubnet1RouteTableAssociation1D27724D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet1RouteTable465CD5DF",
        },
        "SubnetId": Object {
          "Ref": "testvpcpublicSubnet1Subnet7BCDDC7D",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcpublicSubnet1Subnet7BCDDC7D": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcpublicSubnet2DefaultRoute90DCE3DB": Object {
      "DependsOn": Array [
        "testvpcVPCGW7060AA15",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet2RouteTable2C61A6B3",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testvpcpublicSubnet2RouteTable2C61A6B3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcpublicSubnet2RouteTableAssociationDA0D277E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet2RouteTable2C61A6B3",
        },
        "SubnetId": Object {
          "Ref": "testvpcpublicSubnet2SubnetC35BC5E2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcpublicSubnet2SubnetC35BC5E2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcpublicSubnet3DefaultRouteD222611C": Object {
      "DependsOn": Array [
        "testvpcVPCGW7060AA15",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet3RouteTable26A1D7D0",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testvpcpublicSubnet3RouteTable26A1D7D0": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcpublicSubnet3RouteTableAssociation567F65EF": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet3RouteTable26A1D7D0",
        },
        "SubnetId": Object {
          "Ref": "testvpcpublicSubnet3Subnet7D129E66",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcpublicSubnet3Subnet7D129E66": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`when an instance is excluded from the aspect config it should not have alarms 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "MySQLInstance1C9205ABC": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "test1",
        "DBName": "test",
        "DBSubnetGroupName": Object {
          "Ref": "MySQLInstance1SubnetGroup4AF0F1E3",
        },
        "Engine": "mysql",
        "EngineVersion": "8.0.25",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackMySQLInstance1SecretD8D5FB793fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "MySQLInstance1SecretAttachment011303F0": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackMySQLInstance1SecretD8D5FB793fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "MySQLInstance1C9205ABC",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "MySQLInstance1SubnetGroup4AF0F1E3": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for MySQLInstance1 database",
        "SubnetIds": Array [
          Object {
            "Ref": "testvpcprivateSubnet1Subnet2E35BD58",
          },
          Object {
            "Ref": "testvpcprivateSubnet2Subnet60F9C8A0",
          },
          Object {
            "Ref": "testvpcprivateSubnet3SubnetF4D12CC5",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "MySQLInstance2EF90FDEA": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.medium",
        "DBInstanceIdentifier": "test2",
        "DBName": "test",
        "DBSubnetGroupName": Object {
          "Ref": "MySQLInstance2SubnetGroup5413C0C7",
        },
        "Engine": "mysql",
        "EngineVersion": "8.0.25",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "TestStackMySQLInstance2SecretD252E73F3fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "admin",
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "rdssecuritygroupFB88BAE5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "MySQLInstance2RdsInstanceRecommendedAlarmsFromAspectInstanceCpuUtilizationAlarm45FAE787": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect consistent high CPU utilization in order to prevent very high response time and time-outs. If you want to check micro-bursting of CPU utilization you can set a lower alarm evaluation time.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - CPUUtilization",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstance2RdsInstanceRecommendedAlarmsFromAspectInstanceDatabaseConnectionsAlarmE91BA2E7": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent rejected connections when the maximum number of DB connections is reached. This alarm is not recommended if you frequently change DB instance class, because doing so changes the memory and default maximum number of connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - DatabaseConnections",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstance2RdsInstanceRecommendedAlarmsFromAspectInstanceDbLoadAlarmB224AE6D": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect a high DB load. High DB load can cause performance issues in the DB instance. This alarm is not applicable to serverless DB instances.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - DBLoad",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "DBLoad",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 4,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstance2RdsInstanceRecommendedAlarmsFromAspectInstanceFreeLocalStorageAlarm39D304F9": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to detect how close the Aurora DB instance is to reaching the local storage limit, if you do not use Aurora Serverless v2 or higher. Local storage can reach capacity when you store non-persistent data, such as temporary table and log files, in the local storage. This alarm can prevent an out-of-space error that occurs when your DB instance runs out of local storage.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - FreeLocalStorage",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeLocalStorage",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstance2RdsInstanceRecommendedAlarmsFromAspectInstanceFreeStorageSpaceAlarm7E69D6D2": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps prevent storage full issues. This can prevent downtime that occurs when your database instance runs out of storage. We do not recommend using this alarm if you have storage auto scaling enabled, or if you frequently change the storage capacity of the database instance.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - FreeStorageSpace",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "FreeStorageSpace",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstance2RdsInstanceRecommendedAlarmsFromAspectInstanceFreeableMemoryAlarmE2212170": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm is used to help prevent running out of memory which can result in rejected connections.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - FreeableMemory",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "FreeableMemory",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstance2RdsInstanceRecommendedAlarmsFromAspectInstanceReadLatencyAlarm24F2329B": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high read latency. Database disks normally have a low read/write latency, but they can have issues that can cause high latency operations.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - ReadLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "ReadLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstance2RdsInstanceRecommendedAlarmsFromAspectInstanceWriteLatencyAlarm5B80649F": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps to monitor high write latency. Although database disks typically have low read/write latency, they may experience problems that cause high latency operations. Monitoring this will assure you the disk latency is as low as expected.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "MySQLInstance2EF90FDEA",
              },
              " - WriteLatency",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": Array [
          Object {
            "Name": "DBInstanceIdentifier",
            "Value": Object {
              "Ref": "MySQLInstance2EF90FDEA",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "ExtendedStatistic": "p90",
        "MetricName": "WriteLatency",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "MySQLInstance2SecretAttachment8F17EA7D": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "TestStackMySQLInstance2SecretD252E73F3fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "MySQLInstance2EF90FDEA",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "MySQLInstance2SubnetGroup5413C0C7": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for MySQLInstance2 database",
        "SubnetIds": Array [
          Object {
            "Ref": "testvpcprivateSubnet1Subnet2E35BD58",
          },
          Object {
            "Ref": "testvpcprivateSubnet2Subnet60F9C8A0",
          },
          Object {
            "Ref": "testvpcprivateSubnet3SubnetF4D12CC5",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "TestStackMySQLInstance1SecretD8D5FB793fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TestStackMySQLInstance2SecretD252E73F3fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
        "Name": "sample-database-config",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "rdssecuritygroupFB88BAE5": Object {
      "Properties": Object {
        "GroupDescription": "Security group for RDS",
        "GroupName": "rds-security-group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testvpc8985080E": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testvpcIGW2C2BA83F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testvpcVPCGW7060AA15": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testvpcprivateSubnet1RouteTable1D8B9208": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcprivateSubnet1RouteTableAssociation6CDEA04D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcprivateSubnet1RouteTable1D8B9208",
        },
        "SubnetId": Object {
          "Ref": "testvpcprivateSubnet1Subnet2E35BD58",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcprivateSubnet1Subnet2E35BD58": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcprivateSubnet2RouteTable790940DA": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcprivateSubnet2RouteTableAssociation5D307BB0": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcprivateSubnet2RouteTable790940DA",
        },
        "SubnetId": Object {
          "Ref": "testvpcprivateSubnet2Subnet60F9C8A0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcprivateSubnet2Subnet60F9C8A0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcprivateSubnet3RouteTable85B19E5E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcprivateSubnet3RouteTableAssociationDA8B9B9A": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcprivateSubnet3RouteTable85B19E5E",
        },
        "SubnetId": Object {
          "Ref": "testvpcprivateSubnet3SubnetF4D12CC5",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcprivateSubnet3SubnetF4D12CC5": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/privateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcpublicSubnet1DefaultRouteF9C151E8": Object {
      "DependsOn": Array [
        "testvpcVPCGW7060AA15",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet1RouteTable465CD5DF",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testvpcpublicSubnet1RouteTable465CD5DF": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcpublicSubnet1RouteTableAssociation1D27724D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet1RouteTable465CD5DF",
        },
        "SubnetId": Object {
          "Ref": "testvpcpublicSubnet1Subnet7BCDDC7D",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcpublicSubnet1Subnet7BCDDC7D": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcpublicSubnet2DefaultRoute90DCE3DB": Object {
      "DependsOn": Array [
        "testvpcVPCGW7060AA15",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet2RouteTable2C61A6B3",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testvpcpublicSubnet2RouteTable2C61A6B3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcpublicSubnet2RouteTableAssociationDA0D277E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet2RouteTable2C61A6B3",
        },
        "SubnetId": Object {
          "Ref": "testvpcpublicSubnet2SubnetC35BC5E2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcpublicSubnet2SubnetC35BC5E2": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testvpcpublicSubnet3DefaultRouteD222611C": Object {
      "DependsOn": Array [
        "testvpcVPCGW7060AA15",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testvpcIGW2C2BA83F",
        },
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet3RouteTable26A1D7D0",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testvpcpublicSubnet3RouteTable26A1D7D0": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testvpcpublicSubnet3RouteTableAssociation567F65EF": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testvpcpublicSubnet3RouteTable26A1D7D0",
        },
        "SubnetId": Object {
          "Ref": "testvpcpublicSubnet3Subnet7D129E66",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testvpcpublicSubnet3Subnet7D129E66": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/test-vpc/publicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "testvpc8985080E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
