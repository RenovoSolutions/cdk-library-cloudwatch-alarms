// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AutoScalingGroupSnapshot 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "AutoScalingGroupASG804C35BE": Object {
      "Properties": Object {
        "AutoScalingGroupName": "AutoScalingGroup",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroupLaunchConfigDEEB160C",
        },
        "MaxSize": "3",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          Object {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
          Object {
            "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "AutoScalingGroupAutoScalingGroupRecommendedAlarmsFromAspectAutoScalingGroupGroupInServiceCapacity9168656B": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm can detect a low availability in your auto scaling group because of launch failures or suspended launches.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AutoScalingGroupASG804C35BE",
              },
              " - GroupInServiceCapacity",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 10,
        "Dimensions": Array [
          Object {
            "Name": "AutoScalingGroupId",
            "Value": Object {
              "Ref": "AutoScalingGroupASG804C35BE",
            },
          },
        ],
        "EvaluationPeriods": 10,
        "MetricName": "GroupInServiceCapacity",
        "Namespace": "AWS/AutoScaling",
        "Period": 60,
        "Statistic": "Average",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AutoScalingGroupInstanceProfile342FAC7C": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "AutoScalingGroupInstanceRoleDC70D128",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupInstanceRoleDC70D128": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutoScalingGroupInstanceSecurityGroup9D2E0C5E": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/AutoScalingGroup/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AutoScalingGroupLaunchConfigDEEB160C": Object {
      "DependsOn": Array [
        "AutoScalingGroupInstanceRoleDC70D128",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroupInstanceProfile342FAC7C",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t2.micro",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "AutoScalingGroupInstanceSecurityGroup9D2E0C5E",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`AutoScalingGroupSnapshotDefaultActionsInUse 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "AutoScalingGroupASG804C35BE": Object {
      "Properties": Object {
        "AutoScalingGroupName": "AutoScalingGroup",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroupLaunchConfigDEEB160C",
        },
        "MaxSize": "3",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          Object {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
          Object {
            "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "AutoScalingGroupInstanceProfile342FAC7C": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "AutoScalingGroupInstanceRoleDC70D128",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupInstanceRoleDC70D128": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutoScalingGroupInstanceSecurityGroup9D2E0C5E": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/AutoScalingGroup/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AutoScalingGroupLaunchConfigDEEB160C": Object {
      "DependsOn": Array [
        "AutoScalingGroupInstanceRoleDC70D128",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroupInstanceProfile342FAC7C",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t2.micro",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "AutoScalingGroupInstanceSecurityGroup9D2E0C5E",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "TopicBFC7AF6E": Object {
      "Type": "AWS::SNS::Topic",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "autoScalingGroupAlarmsAutoScalingGroupGroupInServiceCapacityDE7C6664": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm can detect a low availability in your auto scaling group because of launch failures or suspended launches.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AutoScalingGroupASG804C35BE",
              },
              " - GroupInServiceCapacity",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 10,
        "Dimensions": Array [
          Object {
            "Name": "AutoScalingGroupId",
            "Value": Object {
              "Ref": "AutoScalingGroupASG804C35BE",
            },
          },
        ],
        "EvaluationPeriods": 10,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "GroupInServiceCapacity",
        "Namespace": "AWS/AutoScaling",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`AutoScalingGroupSnapshotWithExclusion 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "AutoScalingGroupASG804C35BE": Object {
      "Properties": Object {
        "AutoScalingGroupName": "AutoScalingGroup",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroupLaunchConfigDEEB160C",
        },
        "MaxSize": "3",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          Object {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
          Object {
            "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "AutoScalingGroupInstanceProfile342FAC7C": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "AutoScalingGroupInstanceRoleDC70D128",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupInstanceRoleDC70D128": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutoScalingGroupInstanceSecurityGroup9D2E0C5E": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/AutoScalingGroup/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AutoScalingGroupLaunchConfigDEEB160C": Object {
      "DependsOn": Array [
        "AutoScalingGroupInstanceRoleDC70D128",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroupInstanceProfile342FAC7C",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t2.micro",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "AutoScalingGroupInstanceSecurityGroup9D2E0C5E",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`SnapshotForAutoScalingGroupConstruct 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "AutoScalingGroupASG804C35BE": Object {
      "Properties": Object {
        "AutoScalingGroupName": "AutoScalingGroup",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroupLaunchConfigDEEB160C",
        },
        "MaxSize": "3",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          Object {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
          Object {
            "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "AutoScalingGroupAutoScalingGroupRecommendedAlarmsAutoScalingGroupGroupInServiceCapacity1103B400": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm can detect a low availability in your auto scaling group because of launch failures or suspended launches.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AutoScalingGroupASG804C35BE",
              },
              " - GroupInServiceCapacity",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 10,
        "Dimensions": Array [
          Object {
            "Name": "AutoScalingGroupId",
            "Value": Object {
              "Ref": "AutoScalingGroupASG804C35BE",
            },
          },
        ],
        "EvaluationPeriods": 10,
        "MetricName": "GroupInServiceCapacity",
        "Namespace": "AWS/AutoScaling",
        "Period": 60,
        "Statistic": "Average",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AutoScalingGroupInstanceProfile342FAC7C": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "AutoScalingGroupInstanceRoleDC70D128",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupInstanceRoleDC70D128": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutoScalingGroupInstanceSecurityGroup9D2E0C5E": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/AutoScalingGroup/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AutoScalingGroupLaunchConfigDEEB160C": Object {
      "DependsOn": Array [
        "AutoScalingGroupInstanceRoleDC70D128",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroupInstanceProfile342FAC7C",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t2.micro",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "AutoScalingGroupInstanceSecurityGroup9D2E0C5E",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`alarms can be applied individually to resources using extended construct 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "AutoScalingGroupASG804C35BE": Object {
      "Properties": Object {
        "AutoScalingGroupName": "AutoScalingGroup",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroupLaunchConfigDEEB160C",
        },
        "MaxSize": "3",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          Object {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
          Object {
            "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "AutoScalingGroupGroupInServiceCapacityAlarm029B753B": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm can detect a low availability in your auto scaling group because of launch failures or suspended launches.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AutoScalingGroupASG804C35BE",
              },
              " - GroupInServiceCapacity",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 10,
        "Dimensions": Array [
          Object {
            "Name": "AutoScalingGroupId",
            "Value": Object {
              "Ref": "AutoScalingGroupASG804C35BE",
            },
          },
        ],
        "EvaluationPeriods": 10,
        "MetricName": "GroupInServiceCapacity",
        "Namespace": "AWS/AutoScaling",
        "Period": 60,
        "Statistic": "Average",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AutoScalingGroupInstanceProfile342FAC7C": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "AutoScalingGroupInstanceRoleDC70D128",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupInstanceRoleDC70D128": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutoScalingGroupInstanceSecurityGroup9D2E0C5E": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/AutoScalingGroup/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AutoScalingGroupLaunchConfigDEEB160C": Object {
      "DependsOn": Array [
        "AutoScalingGroupInstanceRoleDC70D128",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroupInstanceProfile342FAC7C",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t2.micro",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "AutoScalingGroupInstanceSecurityGroup9D2E0C5E",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`default alarm actions are overridden when individual alarm actions are provided in configuration 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "AutoScalingGroupASG804C35BE": Object {
      "Properties": Object {
        "AutoScalingGroupName": "AutoScalingGroup",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroupLaunchConfigDEEB160C",
        },
        "MaxSize": "3",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          Object {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
          Object {
            "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "AutoScalingGroupInstanceProfile342FAC7C": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "AutoScalingGroupInstanceRoleDC70D128",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupInstanceRoleDC70D128": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutoScalingGroupInstanceSecurityGroup9D2E0C5E": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/AutoScalingGroup/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AutoScalingGroupLaunchConfigDEEB160C": Object {
      "DependsOn": Array [
        "AutoScalingGroupInstanceRoleDC70D128",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroupInstanceProfile342FAC7C",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t2.micro",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "AutoScalingGroupInstanceSecurityGroup9D2E0C5E",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "LambdaAutoScalingGroupGroupInServiceCapacityAlarmPermissionDE86069D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": "123456789012",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "autoscalingAutoScalingGroupAlarmsAutoScalingGroupGroupInServiceCapacityF8F4E41E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaD247545B": Object {
      "DependsOn": Array [
        "LambdaServiceRoleA8ED4D3B",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "exports.handler = async (event) => { console.log(event); }",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LambdaServiceRoleA8ED4D3B",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaServiceRoleA8ED4D3B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TopicBFC7AF6E": Object {
      "Type": "AWS::SNS::Topic",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "autoscalingAutoScalingGroupAlarmsAutoScalingGroupGroupInServiceCapacityF8F4E41E": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "AlarmDescription": "This alarm can detect a low availability in your auto scaling group because of launch failures or suspended launches.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AutoScalingGroupASG804C35BE",
              },
              " - GroupInServiceCapacity",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 10,
        "Dimensions": Array [
          Object {
            "Name": "AutoScalingGroupId",
            "Value": Object {
              "Ref": "AutoScalingGroupASG804C35BE",
            },
          },
        ],
        "EvaluationPeriods": 10,
        "InsufficientDataActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "MetricName": "GroupInServiceCapacity",
        "Namespace": "AWS/AutoScaling",
        "OKActions": Array [
          Object {
            "Fn::GetAtt": Array [
              "LambdaD247545B",
              "Arn",
            ],
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`optional alarm configurations can be overwritten 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "AutoScalingGroupASG804C35BE": Object {
      "Properties": Object {
        "AutoScalingGroupName": "AutoScalingGroup",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroupLaunchConfigDEEB160C",
        },
        "MaxSize": "3",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          Object {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
          Object {
            "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "AutoScalingGroupAutoScalingGroupRecommendedAlarmsFromAspectAutoScalingGroupGroupInServiceCapacity9168656B": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "Custom alarm description",
        "AlarmName": "CustomBurstCreditBalanceAlarm",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 25,
        "Dimensions": Array [
          Object {
            "Name": "AutoScalingGroupId",
            "Value": Object {
              "Ref": "AutoScalingGroupASG804C35BE",
            },
          },
        ],
        "EvaluationPeriods": 25,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "GroupInServiceCapacity",
        "Namespace": "AWS/AutoScaling",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AutoScalingGroupInstanceProfile342FAC7C": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "AutoScalingGroupInstanceRoleDC70D128",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupInstanceRoleDC70D128": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutoScalingGroupInstanceSecurityGroup9D2E0C5E": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/AutoScalingGroup/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AutoScalingGroupLaunchConfigDEEB160C": Object {
      "DependsOn": Array [
        "AutoScalingGroupInstanceRoleDC70D128",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroupInstanceProfile342FAC7C",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t2.micro",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "AutoScalingGroupInstanceSecurityGroup9D2E0C5E",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "TopicBFC7AF6E": Object {
      "Type": "AWS::SNS::Topic",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`stack should contain autoScalingGroup recommended alarms if recommended alarms aspect is applied with no exclusions 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "AutoScalingGroupASG804C35BE": Object {
      "Properties": Object {
        "AutoScalingGroupName": "AutoScalingGroup",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroupLaunchConfigDEEB160C",
        },
        "MaxSize": "3",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          Object {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
          Object {
            "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "AutoScalingGroupAutoScalingGroupRecommendedAlarmsFromAspectAutoScalingGroupGroupInServiceCapacity9168656B": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm can detect a low availability in your auto scaling group because of launch failures or suspended launches.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AutoScalingGroupASG804C35BE",
              },
              " - GroupInServiceCapacity",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 10,
        "Dimensions": Array [
          Object {
            "Name": "AutoScalingGroupId",
            "Value": Object {
              "Ref": "AutoScalingGroupASG804C35BE",
            },
          },
        ],
        "EvaluationPeriods": 10,
        "MetricName": "GroupInServiceCapacity",
        "Namespace": "AWS/AutoScaling",
        "Period": 60,
        "Statistic": "Average",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AutoScalingGroupInstanceProfile342FAC7C": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "AutoScalingGroupInstanceRoleDC70D128",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupInstanceRoleDC70D128": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutoScalingGroupInstanceSecurityGroup9D2E0C5E": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/AutoScalingGroup/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AutoScalingGroupLaunchConfigDEEB160C": Object {
      "DependsOn": Array [
        "AutoScalingGroupInstanceRoleDC70D128",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroupInstanceProfile342FAC7C",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t2.micro",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "AutoScalingGroupInstanceSecurityGroup9D2E0C5E",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`when an resource is excluded from the aspect config it should not have alarms 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "AutoScalingGroup1ASG8D1BAC68": Object {
      "Properties": Object {
        "AutoScalingGroupName": "AutoScalingGroup1",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroup1LaunchConfig52D709DA",
        },
        "MaxSize": "3",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "TestStack/AutoScalingGroup1",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          Object {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
          Object {
            "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "AutoScalingGroup1InstanceProfile17D3F43B": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "AutoScalingGroup1InstanceRole28B77469",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroup1InstanceRole28B77469": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup1",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutoScalingGroup1InstanceSecurityGroupB9151D5D": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/AutoScalingGroup1/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AutoScalingGroup1LaunchConfig52D709DA": Object {
      "DependsOn": Array [
        "AutoScalingGroup1InstanceRole28B77469",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroup1InstanceProfile17D3F43B",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t2.micro",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "AutoScalingGroup1InstanceSecurityGroupB9151D5D",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "AutoScalingGroup2ASGF28D2D46": Object {
      "Properties": Object {
        "AutoScalingGroupName": "AutoScalingGroup2",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroup2LaunchConfig9968183C",
        },
        "MaxSize": "3",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "TestStack/AutoScalingGroup2",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          Object {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
          Object {
            "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "AutoScalingGroup2AutoScalingGroupRecommendedAlarmsFromAspectAutoScalingGroup2GroupInServiceCapacity429C0B3D": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm can detect a low availability in your auto scaling group because of launch failures or suspended launches.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AutoScalingGroup2ASGF28D2D46",
              },
              " - GroupInServiceCapacity",
            ],
          ],
        },
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 10,
        "Dimensions": Array [
          Object {
            "Name": "AutoScalingGroupId",
            "Value": Object {
              "Ref": "AutoScalingGroup2ASGF28D2D46",
            },
          },
        ],
        "EvaluationPeriods": 10,
        "MetricName": "GroupInServiceCapacity",
        "Namespace": "AWS/AutoScaling",
        "Period": 60,
        "Statistic": "Average",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup2",
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AutoScalingGroup2InstanceProfile52BA4165": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "AutoScalingGroup2InstanceRole28D8FE35",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroup2InstanceRole28D8FE35": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup2",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutoScalingGroup2InstanceSecurityGroupFE4C1078": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/AutoScalingGroup2/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/AutoScalingGroup2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AutoScalingGroup2LaunchConfig9968183C": Object {
      "DependsOn": Array [
        "AutoScalingGroup2InstanceRole28D8FE35",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroup2InstanceProfile52BA4165",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t2.micro",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "AutoScalingGroup2InstanceSecurityGroupFE4C1078",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": Object {
      "DependsOn": Array [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
