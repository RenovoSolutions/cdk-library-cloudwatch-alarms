// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Bucket83908E77": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "BucketS3RecommendedAlarmsFromAspectBucket4xxErrorsAlarm3784013E": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps us report the total number of 4xx error status codes that are made in response to client requests. 403 error codes might indicate an incorrect IAM policy, and 404 error codes might indicate mis-behaving client application, for example. Enabling S3 server access logging on a temporary basis will help you to pinpoint the issue's origin using the fields HTTP status and Error Code. To understand more about the error code, see Error Responses (https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html).",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "Bucket83908E77",
              },
              " - 4xxErrors",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "BucketName",
            "Value": Object {
              "Ref": "Bucket83908E77",
            },
          },
          Object {
            "Name": "FilterId",
            "Value": "AllMetrics",
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "4xxErrors",
        "Namespace": "AWS/S3",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.05,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "BucketS3RecommendedAlarmsFromAspectBucket5xxErrorsAlarmC88AFF69": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps you detect a high number of server-side errors. These errors indicate that a client made a request that the server couldn’t complete. This can help you correlate the issue your application is facing because of S3. For more information to help you efficiently handle or reduce errors, see Optimizing performance design patterns (https://docs.aws.amazon.com/AmazonS3/latest/userguide/optimizing-performance-design-patterns.html#optimizing-performance-timeouts-retries). Errors might also be caused by an the issue with S3, check AWS service health dashboard for the status of Amazon S3 in your Region.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "Bucket83908E77",
              },
              " - 5xxErrors",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "BucketName",
            "Value": Object {
              "Ref": "Bucket83908E77",
            },
          },
          Object {
            "Name": "FilterId",
            "Value": "AllMetrics",
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "5xxErrors",
        "Namespace": "AWS/S3",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.05,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`SnapshotDefaultActionsInUse 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Bucket83908E77": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketName": "bucket",
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "BucketAlarmsBucket4xxErrorsAlarm2E25C0E9": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm helps us report the total number of 4xx error status codes that are made in response to client requests. 403 error codes might indicate an incorrect IAM policy, and 404 error codes might indicate mis-behaving client application, for example. Enabling S3 server access logging on a temporary basis will help you to pinpoint the issue's origin using the fields HTTP status and Error Code. To understand more about the error code, see Error Responses (https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html).",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "Bucket83908E77",
              },
              " - 4xxErrors",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "BucketName",
            "Value": Object {
              "Ref": "Bucket83908E77",
            },
          },
          Object {
            "Name": "FilterId",
            "Value": "AllMetrics",
          },
        ],
        "EvaluationPeriods": 15,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "4xxErrors",
        "Namespace": "AWS/S3",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.05,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "BucketAlarmsBucket5xxErrorsAlarm08E51BDD": Object {
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "AlarmDescription": "This alarm helps you detect a high number of server-side errors. These errors indicate that a client made a request that the server couldn’t complete. This can help you correlate the issue your application is facing because of S3. For more information to help you efficiently handle or reduce errors, see Optimizing performance design patterns (https://docs.aws.amazon.com/AmazonS3/latest/userguide/optimizing-performance-design-patterns.html#optimizing-performance-timeouts-retries). Errors might also be caused by an the issue with S3, check AWS service health dashboard for the status of Amazon S3 in your Region.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "Bucket83908E77",
              },
              " - 5xxErrors",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "BucketName",
            "Value": Object {
              "Ref": "Bucket83908E77",
            },
          },
          Object {
            "Name": "FilterId",
            "Value": "AllMetrics",
          },
        ],
        "EvaluationPeriods": 15,
        "InsufficientDataActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "MetricName": "5xxErrors",
        "Namespace": "AWS/S3",
        "OKActions": Array [
          Object {
            "Ref": "TopicBFC7AF6E",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.05,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "TopicBFC7AF6E": Object {
      "Type": "AWS::SNS::Topic",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`SnapshotForBucketConstruct 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Bucket83908E77": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "BucketS3RecommendedAlarmsBucket4xxErrorsAlarm0244A631": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps us report the total number of 4xx error status codes that are made in response to client requests. 403 error codes might indicate an incorrect IAM policy, and 404 error codes might indicate mis-behaving client application, for example. Enabling S3 server access logging on a temporary basis will help you to pinpoint the issue's origin using the fields HTTP status and Error Code. To understand more about the error code, see Error Responses (https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html).",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "Bucket83908E77",
              },
              " - 4xxErrors",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "BucketName",
            "Value": Object {
              "Ref": "Bucket83908E77",
            },
          },
          Object {
            "Name": "FilterId",
            "Value": "AllMetrics",
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "4xxErrors",
        "Namespace": "AWS/S3",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.05,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "BucketS3RecommendedAlarmsBucket5xxErrorsAlarmD050FFC7": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps you detect a high number of server-side errors. These errors indicate that a client made a request that the server couldn’t complete. This can help you correlate the issue your application is facing because of S3. For more information to help you efficiently handle or reduce errors, see Optimizing performance design patterns (https://docs.aws.amazon.com/AmazonS3/latest/userguide/optimizing-performance-design-patterns.html#optimizing-performance-timeouts-retries). Errors might also be caused by an the issue with S3, check AWS service health dashboard for the status of Amazon S3 in your Region.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "Bucket83908E77",
              },
              " - 5xxErrors",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "BucketName",
            "Value": Object {
              "Ref": "Bucket83908E77",
            },
          },
          Object {
            "Name": "FilterId",
            "Value": "AllMetrics",
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "5xxErrors",
        "Namespace": "AWS/S3",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.05,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`SnapshotWithExclusion 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Bucket83908E77": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "BucketS3RecommendedAlarmsFromAspectBucket5xxErrorsAlarmC88AFF69": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps you detect a high number of server-side errors. These errors indicate that a client made a request that the server couldn’t complete. This can help you correlate the issue your application is facing because of S3. For more information to help you efficiently handle or reduce errors, see Optimizing performance design patterns (https://docs.aws.amazon.com/AmazonS3/latest/userguide/optimizing-performance-design-patterns.html#optimizing-performance-timeouts-retries). Errors might also be caused by an the issue with S3, check AWS service health dashboard for the status of Amazon S3 in your Region.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "Bucket83908E77",
              },
              " - 5xxErrors",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "BucketName",
            "Value": Object {
              "Ref": "Bucket83908E77",
            },
          },
          Object {
            "Name": "FilterId",
            "Value": "AllMetrics",
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "5xxErrors",
        "Namespace": "AWS/S3",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.05,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`SnapshotWithResourceExclusion 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Bucket25524B414": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "Bucket2S3RecommendedAlarmsFromAspectBucket24xxErrorsAlarmD819B190": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps us report the total number of 4xx error status codes that are made in response to client requests. 403 error codes might indicate an incorrect IAM policy, and 404 error codes might indicate mis-behaving client application, for example. Enabling S3 server access logging on a temporary basis will help you to pinpoint the issue's origin using the fields HTTP status and Error Code. To understand more about the error code, see Error Responses (https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html).",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "Bucket25524B414",
              },
              " - 4xxErrors",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "BucketName",
            "Value": Object {
              "Ref": "Bucket25524B414",
            },
          },
          Object {
            "Name": "FilterId",
            "Value": "AllMetrics",
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "4xxErrors",
        "Namespace": "AWS/S3",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.05,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Bucket2S3RecommendedAlarmsFromAspectBucket25xxErrorsAlarm058F0BBE": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps you detect a high number of server-side errors. These errors indicate that a client made a request that the server couldn’t complete. This can help you correlate the issue your application is facing because of S3. For more information to help you efficiently handle or reduce errors, see Optimizing performance design patterns (https://docs.aws.amazon.com/AmazonS3/latest/userguide/optimizing-performance-design-patterns.html#optimizing-performance-timeouts-retries). Errors might also be caused by an the issue with S3, check AWS service health dashboard for the status of Amazon S3 in your Region.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "Bucket25524B414",
              },
              " - 5xxErrors",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "BucketName",
            "Value": Object {
              "Ref": "Bucket25524B414",
            },
          },
          Object {
            "Name": "FilterId",
            "Value": "AllMetrics",
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "5xxErrors",
        "Namespace": "AWS/S3",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.05,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Bucket83908E77": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "BucketS3RecommendedAlarmsFromAspectBucket4xxErrorsAlarm3784013E": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps us report the total number of 4xx error status codes that are made in response to client requests. 403 error codes might indicate an incorrect IAM policy, and 404 error codes might indicate mis-behaving client application, for example. Enabling S3 server access logging on a temporary basis will help you to pinpoint the issue's origin using the fields HTTP status and Error Code. To understand more about the error code, see Error Responses (https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html).",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "Bucket83908E77",
              },
              " - 4xxErrors",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "BucketName",
            "Value": Object {
              "Ref": "Bucket83908E77",
            },
          },
          Object {
            "Name": "FilterId",
            "Value": "AllMetrics",
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "4xxErrors",
        "Namespace": "AWS/S3",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.05,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "BucketS3RecommendedAlarmsFromAspectBucket5xxErrorsAlarmC88AFF69": Object {
      "Properties": Object {
        "AlarmDescription": "This alarm helps you detect a high number of server-side errors. These errors indicate that a client made a request that the server couldn’t complete. This can help you correlate the issue your application is facing because of S3. For more information to help you efficiently handle or reduce errors, see Optimizing performance design patterns (https://docs.aws.amazon.com/AmazonS3/latest/userguide/optimizing-performance-design-patterns.html#optimizing-performance-timeouts-retries). Errors might also be caused by an the issue with S3, check AWS service health dashboard for the status of Amazon S3 in your Region.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "Bucket83908E77",
              },
              " - 5xxErrors",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 15,
        "Dimensions": Array [
          Object {
            "Name": "BucketName",
            "Value": Object {
              "Ref": "Bucket83908E77",
            },
          },
          Object {
            "Name": "FilterId",
            "Value": "AllMetrics",
          },
        ],
        "EvaluationPeriods": 15,
        "MetricName": "5xxErrors",
        "Namespace": "AWS/S3",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.05,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
